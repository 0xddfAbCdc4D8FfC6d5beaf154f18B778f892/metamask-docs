"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[4022],{15680:(e,a,t)=>{t.d(a,{xA:()=>d,yg:()=>b});var r=t(96540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),p=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},d=function(e){var a=p(e.components);return r.createElement(l.Provider,{value:a},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},m=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(t),m=n,b=u["".concat(l,".").concat(m)]||u[m]||c[m]||o;return t?r.createElement(b,s(s({ref:a},d),{},{components:t})):r.createElement(b,s({ref:a},d))}));function b(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[u]="string"==typeof e?e:n,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},54098:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var r=t(58168),n=(t(96540),t(15680));const o={description:"Integrate MetaMask SDK with Web3-Onboard in your JavaScript dapp.",sidebar_position:1,sidebar_label:"Web3-Onboard",tags:["JavaScript SDK"]},s="Use Web3-Onboard with MetaMask SDK",i={unversionedId:"how-to/use-sdk/3rd-party-libraries/web3-onboard",id:"how-to/use-sdk/3rd-party-libraries/web3-onboard",title:"Use Web3-Onboard with MetaMask SDK",description:"Integrate MetaMask SDK with Web3-Onboard in your JavaScript dapp.",source:"@site/wallet/how-to/use-sdk/3rd-party-libraries/web3-onboard.md",sourceDirName:"how-to/use-sdk/3rd-party-libraries",slug:"/how-to/use-sdk/3rd-party-libraries/web3-onboard",permalink:"/fix/api-specs-version-docusaurus-config/wallet/how-to/use-sdk/3rd-party-libraries/web3-onboard",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/how-to/use-sdk/3rd-party-libraries/web3-onboard.md",tags:[{label:"JavaScript SDK",permalink:"/fix/api-specs-version-docusaurus-config/wallet/tags/java-script-sdk"}],version:"current",sidebarPosition:1,frontMatter:{description:"Integrate MetaMask SDK with Web3-Onboard in your JavaScript dapp.",sidebar_position:1,sidebar_label:"Web3-Onboard",tags:["JavaScript SDK"]},sidebar:"walletSidebar",previous:{title:"Third-party libraries",permalink:"/fix/api-specs-version-docusaurus-config/wallet/how-to/use-sdk/3rd-party-libraries/"},next:{title:"Wagmi",permalink:"/fix/api-specs-version-docusaurus-config/wallet/how-to/use-sdk/3rd-party-libraries/wagmi"}},l={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Install the module",id:"1-install-the-module",level:3},{value:"2. Import the module",id:"2-import-the-module",level:3},{value:"3. Instantiate the module",id:"3-instantiate-the-module",level:3},{value:"4. Use the module",id:"4-use-the-module",level:3},{value:"Example",id:"example",level:2}],d={toc:p},u="wrapper";function c(e){let{components:a,...t}=e;return(0,n.yg)(u,(0,r.A)({},d,t,{components:a,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"use-web3-onboard-with-metamask-sdk"},"Use Web3-Onboard with MetaMask SDK"),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"https://onboard.blocknative.com/"},"Web3-Onboard")," is a JavaScript library that simplifies the process\nof onboarding users into dapps.\nIt provides a smooth user interface, a variety of wallet integrations, and is highly customizable to\nmeet the needs of your dapp."),(0,n.yg)("p",null,"You can integrate ",(0,n.yg)("a",{parentName:"p",href:"/fix/api-specs-version-docusaurus-config/wallet/concepts/sdk/"},"MetaMask SDK")," into your dapp alongside Web3-Onboard,\nusing the Web3-Onboard MetaMask module, to enable your users to seamlessly and securely connect to\nthe MetaMask browser extension and MetaMask Mobile."),(0,n.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,n.yg)("p",null,"Set up a project with ",(0,n.yg)("a",{parentName:"p",href:"https://onboard.blocknative.com/docs/getting-started/installation"},"Web3-Onboard"),"."),(0,n.yg)("h2",{id:"steps"},"Steps"),(0,n.yg)("h3",{id:"1-install-the-module"},"1. Install the module"),(0,n.yg)("p",null,"Install the Web3-Onboard MetaMask module into your dapp:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"npm i @web3-onboard/metamask\n")),(0,n.yg)("h3",{id:"2-import-the-module"},"2. Import the module"),(0,n.yg)("p",null,"In your project script, add the following to import the module:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'import metamaskSDK from "@web3-onboard/metamask";\n')),(0,n.yg)("h3",{id:"3-instantiate-the-module"},"3. Instantiate the module"),(0,n.yg)("p",null,"Instantiate the module using any ",(0,n.yg)("a",{parentName:"p",href:"/fix/api-specs-version-docusaurus-config/wallet/reference/sdk-js-options"},"JavaScript SDK options"),", for\nexample, ",(0,n.yg)("a",{parentName:"p",href:"/fix/api-specs-version-docusaurus-config/wallet/reference/sdk-js-options#dappmetadata"},(0,n.yg)("inlineCode",{parentName:"a"},"dappMetadata")),":"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},'const metamaskSDKWallet = metamaskSDK({\n  options: {\n    extensionOnly: false,\n    dappMetadata: {\n      name: "Example Web3-Onboard Dapp",\n    },\n  },\n});\n')),(0,n.yg)("h3",{id:"4-use-the-module"},"4. Use the module"),(0,n.yg)("p",null,"Use the module as follows:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-javascript"},"const onboard = Onboard({\n  // Other Onboard options.\n  wallets: [\n    metamaskSDKWallet,\n    // Other wallets.\n  ],\n});\n\nconst connectedWallets = await onboard.connectWallet();\nconsole.log(connectedWallets);\n")),(0,n.yg)("h2",{id:"example"},"Example"),(0,n.yg)("p",null,"For an example of using Web3-Onboard with MetaMask SDK, see the\n",(0,n.yg)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-sdk/tree/main/packages/examples/with-web3onboard"},"example dapp"),"\nin the JavaScript SDK GitHub repository.\nSee the ",(0,n.yg)("a",{parentName:"p",href:"https://github.com/MetaMask/metamask-sdk/blob/main/packages/examples/with-web3onboard/src/App.tsx"},(0,n.yg)("inlineCode",{parentName:"a"},"App.tsx")),"\nfile for more details on implementing the integration in a React dapp."))}c.isMDXComponent=!0}}]);