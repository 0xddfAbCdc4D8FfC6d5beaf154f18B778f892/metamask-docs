"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[2923],{3102:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>r,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=s(74848),t=s(28453);const i={description:"Display custom alert, confirmation, or prompt screens in MetaMask.",sidebar_position:2},o="Dialogs",l={id:"features/custom-ui/dialogs",title:"Dialogs",description:"Display custom alert, confirmation, or prompt screens in MetaMask.",source:"@site/snaps/features/custom-ui/dialogs.md",sourceDirName:"features/custom-ui",slug:"/features/custom-ui/dialogs",permalink:"/1202-tutorial/snaps/features/custom-ui/dialogs",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/features/custom-ui/dialogs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Display custom alert, confirmation, or prompt screens in MetaMask.",sidebar_position:2},sidebar:"snapsSidebar",previous:{title:"Interactive UI",permalink:"/1202-tutorial/snaps/features/custom-ui/interactive-ui"},next:{title:"Home pages",permalink:"/1202-tutorial/snaps/features/custom-ui/home-pages"}},r={},d=[{value:"Request permission to display dialogs",id:"request-permission-to-display-dialogs",level:2},{value:"Display an alert dialog",id:"display-an-alert-dialog",level:2},{value:"Display a confirmation dialog",id:"display-a-confirmation-dialog",level:2},{value:"Display a prompt dialog",id:"display-a-prompt-dialog",level:2},{value:"Example",id:"example",level:2}];function p(e){const a={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"dialogs",children:"Dialogs"}),"\n",(0,n.jsxs)(a.p,{children:["You can display a dialog in the MetaMask UI using the\n",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/reference/snaps-api#snap_dialog",children:(0,n.jsx)(a.code,{children:"snap_dialog"})})," API method.\nDialogs can contain ",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/features/custom-ui/",children:"custom UI"})," and ",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/features/custom-ui/interactive-ui",children:"interactive UI"})," components."]}),"\n",(0,n.jsxs)(a.p,{children:["There are three types of dialogs: ",(0,n.jsx)(a.a,{href:"#display-an-alert-dialog",children:"alerts"}),",\n",(0,n.jsx)(a.a,{href:"#display-a-confirmation-dialog",children:"confirmations"}),", and ",(0,n.jsx)(a.a,{href:"#display-a-prompt-dialog",children:"prompts"}),"."]}),"\n",(0,n.jsx)(a.admonition,{type:"caution",children:(0,n.jsxs)(a.p,{children:["Dialogs do not work when MetaMask is locked.\nTo check if MetaMask is locked, use\n",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/reference/snaps-api#snap_getclientstatus",children:(0,n.jsx)(a.code,{children:"snap_getClientStatus"})}),"."]})}),"\n",(0,n.jsx)(a.h2,{id:"request-permission-to-display-dialogs",children:"Request permission to display dialogs"}),"\n",(0,n.jsxs)(a.p,{children:["To display dialogs, first request the ",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/reference/snaps-api#snap_dialog",children:(0,n.jsx)(a.code,{children:"snap_dialog"})})," permission.\nAdd the following to your Snap's manifest file:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-json",metastring:'title="snap.manifest.json"',children:'"initialPermissions": {\n  "snap_dialog": {}\n}\n'})}),"\n",(0,n.jsx)(a.h2,{id:"display-an-alert-dialog",children:"Display an alert dialog"}),"\n",(0,n.jsxs)(a.p,{children:["To display an alert that can only be acknowledged, call\n",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/reference/snaps-api#snap_dialog",children:(0,n.jsx)(a.code,{children:"snap_dialog"})})," with ",(0,n.jsx)(a.code,{children:'type: "alert"'}),".\nThe following example displays custom UI that alerts the user when something happens in the system:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",metastring:'title="index.js"',children:'import { panel, text, heading } from "@metamask/snaps-sdk";\n\nawait snap.request({\n  method: "snap_dialog",\n  params: {\n    type: "alert",\n    content: panel([\n      heading("Something happened in the system"),\n      text("The thing that happened is..."),\n    ]),\n  },\n});\n\n// Code that should execute after the alert has been acknowledged.\n'})}),"\n",(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{src:s(44214).A,alt:"Alert dialog example",width:"360px",style:{border:"1px solid #DCDCDC"}})}),"\n",(0,n.jsx)(a.h2,{id:"display-a-confirmation-dialog",children:"Display a confirmation dialog"}),"\n",(0,n.jsxs)(a.p,{children:["To display a confirmation that can be accepted or rejected, call\n",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/reference/snaps-api#snap_dialog",children:(0,n.jsx)(a.code,{children:"snap_dialog"})})," with ",(0,n.jsx)(a.code,{children:'type: "confirmation"'}),".\nThe following example displays custom UI that asks the user to confirm whether they would like to\ntake an action:"]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",metastring:'title="index.js"',children:'import { panel, text, heading } from "@metamask/snaps-sdk";\n\nconst result = await snap.request({\n  method: "snap_dialog",\n  params: {\n    type: "confirmation",\n    content: panel([\n      heading("Would you like to take the action?"),\n      text("The action is..."),\n    ]),\n  },\n});\n\nif (result === true) {\n  // Do the action.\n}\n'})}),"\n",(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{src:s(77609).A,alt:"Confirmation dialog example",width:"360px",style:{border:"1px solid #DCDCDC"}})}),"\n",(0,n.jsx)(a.h2,{id:"display-a-prompt-dialog",children:"Display a prompt dialog"}),"\n",(0,n.jsxs)(a.p,{children:["To display a prompt where the user can enter a text response, call\n",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/reference/snaps-api#snap_dialog",children:(0,n.jsx)(a.code,{children:"snap_dialog"})})," with ",(0,n.jsx)(a.code,{children:'type: "prompt"'}),".\nPrompt dialogs also accept a ",(0,n.jsx)(a.code,{children:"placeholder"})," value that displays in the input field when no text is entered."]}),"\n",(0,n.jsx)(a.p,{children:"The following example displays custom UI that prompts the user to enter a wallet address:"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-javascript",metastring:'title="index.js"',children:'import { panel, text, heading } from "@metamask/snaps-sdk";\n\nconst walletAddress = await snap.request({\n  method: "snap_dialog",\n  params: {\n    type: "prompt",\n    content: panel([\n      heading("What is the wallet address?"),\n      text("Please enter the wallet address to be monitored"),\n    ]),\n    placeholder: "0x123...",\n  },\n});\n\n// walletAddress will be a string containing the address entered by the user.\n'})}),"\n",(0,n.jsx)("p",{align:"center",children:(0,n.jsx)("img",{src:s(9398).A,alt:"Prompt dialog example",width:"360px",style:{border:"1px solid #DCDCDC"}})}),"\n",(0,n.jsx)(a.h2,{id:"example",children:"Example"}),"\n",(0,n.jsxs)(a.p,{children:["See the ",(0,n.jsx)(a.a,{href:"https://github.com/MetaMask/snaps/tree/main/packages/examples/packages/dialogs",children:(0,n.jsx)(a.code,{children:"@metamask/dialog-example-snap"})}),"\npackage for a full example of implementing dialogs.\nThis example exposes a ",(0,n.jsx)(a.a,{href:"/1202-tutorial/snaps/learn/about-snaps/apis#custom-json-rpc-apis",children:"custom JSON-RPC API"}),"\nfor dapps to display dialogs."]})]})}function c(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},44214:(e,a,s)=>{s.d(a,{A:()=>n});const n=s.p+"assets/images/alert-dialog-c9346ea2c63a5fefb4be37b4101f37fd.png"},77609:(e,a,s)=>{s.d(a,{A:()=>n});const n=s.p+"assets/images/confirmation-dialog-5dba2d923c22ac75a1a5f8f7b77da5b8.png"},9398:(e,a,s)=>{s.d(a,{A:()=>n});const n=s.p+"assets/images/prompt-dialog-b54dc7e8a8621fb1f95b51685b60f44e.png"},28453:(e,a,s)=>{s.d(a,{R:()=>o,x:()=>l});var n=s(96540);const t={},i=n.createContext(t);function o(e){const a=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(i.Provider,{value:a},e.children)}}}]);