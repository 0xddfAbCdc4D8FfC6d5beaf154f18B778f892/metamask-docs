"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[8883],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,m=u["".concat(s,".").concat(h)]||u[h]||d[h]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},69164:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(58168),r=(n(96540),n(15680));const o={description:"Create a simple dapp to integrate with MetaMask.",toc_max_heading_level:4,sidebar_position:3},i="Create a simple dapp",l={unversionedId:"tutorials/javascript-dapp-simple",id:"tutorials/javascript-dapp-simple",title:"Create a simple dapp",description:"Create a simple dapp to integrate with MetaMask.",source:"@site/wallet/tutorials/javascript-dapp-simple.md",sourceDirName:"tutorials",slug:"/tutorials/javascript-dapp-simple",permalink:"/1202-tutorial/wallet/tutorials/javascript-dapp-simple",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/tutorials/javascript-dapp-simple.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{description:"Create a simple dapp to integrate with MetaMask.",toc_max_heading_level:4,sidebar_position:3},sidebar:"walletSidebar",previous:{title:"Create a React dapp with global state",permalink:"/1202-tutorial/wallet/tutorials/react-dapp-global-state"},next:{title:"Reference",permalink:"/1202-tutorial/wallet/reference"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Set up a new project",id:"1-set-up-a-new-project",level:3},{value:"2. Install and configure Webpack",id:"2-install-and-configure-webpack",level:3},{value:"3. Detect MetaMask",id:"3-detect-metamask",level:3},{value:"4. Serve the project",id:"4-serve-the-project",level:3},{value:"5. Detect a user&#39;s network",id:"5-detect-a-users-network",level:3},{value:"6. Access a user&#39;s accounts",id:"6-access-a-users-accounts",level:3},{value:"Example",id:"example",level:2},{value:"JavaScript",id:"javascript",level:3},{value:"HTML",id:"html",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"create-a-simple-dapp"},"Create a simple dapp"),(0,r.yg)("p",null,"This tutorial walks you through creating a simple JavaScript dapp and integrating it with MetaMask.\nIt demonstrates the basics of connecting to MetaMask: detecting the MetaMask provider, detecting the user's network, and accessing the user's accounts."),(0,r.yg)("admonition",{title:"Learning tutorial",type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"This tutorial is for educational purposes and connects to MetaMask using the legacy provider object, ",(0,r.yg)("inlineCode",{parentName:"p"},"window.ethereum"),", for the sake of simplicity.\nFor deployment in a production environment, we recommend ",(0,r.yg)("a",{parentName:"p",href:"/1202-tutorial/wallet/how-to/connect/"},"connecting to MetaMask using EIP-6963")," instead. "),(0,r.yg)("p",{parentName:"admonition"},(0,r.yg)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-6963"},"EIP-6963")," introduces an alternative wallet detection mechanism to the ",(0,r.yg)("inlineCode",{parentName:"p"},"window.ethereum")," provider, and enables dapps to support ",(0,r.yg)("a",{parentName:"p",href:"/1202-tutorial/wallet/concepts/wallet-interoperability"},"wallet interoperability"),"."),(0,r.yg)("p",{parentName:"admonition"},"For a full end-to-end tutorial that can be used in production, see the\n",(0,r.yg)("a",{parentName:"p",href:"/1202-tutorial/wallet/tutorials/react-dapp-local-state"},"Create a simple React dapp")," tutorial.")),(0,r.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://metamask.io/"},"MetaMask")," installed in the browser of your choice on your development machine.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"A text editor of your choice, such as ",(0,r.yg)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"VS Code"),".\nYou can install the ",(0,r.yg)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"},"Live Server"),"\nextension for VS Code to easily launch a local development server for your dapp.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("a",{parentName:"p",href:"https://docs.npmjs.com/downloading-and-installing-node-js-and-npm"},"npm"),"."))),(0,r.yg)("h2",{id:"steps"},"Steps"),(0,r.yg)("h3",{id:"1-set-up-a-new-project"},"1. Set up a new project"),(0,r.yg)("p",null,"Create a new project with the following structure:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-text"},"simple-dapp/\n\u251c\u2500 src/\n\u2502  \u251c\u2500 index.js\n\u251c\u2500 dist/\n\u2502  \u251c\u2500 index.html\n")),(0,r.yg)("p",null,"This tutorial uses the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/MetaMask/detect-provider"},(0,r.yg)("inlineCode",{parentName:"a"},"@metamask/detect-provider"))," module and a bundler, ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/webpack/webpack"},"Webpack"),", to compile the module and create an output script ",(0,r.yg)("inlineCode",{parentName:"p"},"dist/main.js"),"."),(0,r.yg)("p",null,"Add the following code to ",(0,r.yg)("inlineCode",{parentName:"p"},"dist/index.html"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <title>Simple dapp</title>\n</head>\n<body>\n  <script src="../dist/index.js"><\/script>  \x3c!-- Links to the JavaScript bundle created by Webpack --\x3e\n</body>\n</html>\n')),(0,r.yg)("h3",{id:"2-install-and-configure-webpack"},"2. Install and configure Webpack"),(0,r.yg)("p",null,"Navigate to the root of your ",(0,r.yg)("inlineCode",{parentName:"p"},"simple-dapp")," directory and run the following commands to initialize npm and install Webpack."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm init -y && npm install --save-dev webpack webpack-cli\n")),(0,r.yg)("p",null,"Create a ",(0,r.yg)("inlineCode",{parentName:"p"},"webpack.config.js")," in the root of your project with the following configuration:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="webpack.config.js"',title:'"webpack.config.js"'},'const path = require("path");\n\nmodule.exports = {\n  entry: "./src/index.js",\n  output: {\n    path: path.resolve(__dirname, "dist"),\n    filename: "index.js",\n  },\n  mode: "development",\n};\n')),(0,r.yg)("p",null,"Then, edit ",(0,r.yg)("inlineCode",{parentName:"p"},"package.json")," to include a build script:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'"scripts": {\n  "build": "webpack"\n}\n')),(0,r.yg)("p",null,"When you run ",(0,r.yg)("inlineCode",{parentName:"p"},"npm run build")," from your terminal, Webpack bundles the content in ",(0,r.yg)("inlineCode",{parentName:"p"},"src/index.js")," into ",(0,r.yg)("inlineCode",{parentName:"p"},"dist/main.js"),", which is linked in ",(0,r.yg)("inlineCode",{parentName:"p"},"index.html"),"."),(0,r.yg)("h3",{id:"3-detect-metamask"},"3. Detect MetaMask"),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},"The ",(0,r.yg)("inlineCode",{parentName:"p"},"@metamask/detect-provider")," module is deprecated, and is only used here for educational purposes. In production environments, we recommend ",(0,r.yg)("a",{parentName:"p",href:"/1202-tutorial/wallet/how-to/connect/"},"connecting to MetaMask using EIP-6963"),".")),(0,r.yg)("p",null,"Install the ",(0,r.yg)("inlineCode",{parentName:"p"},"@metamask/detect-provider")," module in your project directory:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm i @metamask/detect-provider\n")),(0,r.yg)("p",null,"Add the following code to ",(0,r.yg)("inlineCode",{parentName:"p"},"src/index.js")," to detect the MetaMask provider using ",(0,r.yg)("inlineCode",{parentName:"p"},"@metamask/detect-provider"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'import detectEthereumProvider from "@metamask/detect-provider";\n\nasync function setup() {\n  const provider = await detectEthereumProvider();\n\n  if (provider && provider === window.ethereum) {\n    console.log("MetaMask is available!");\n    startApp(provider); // Initialize your dapp with MetaMask.\n  } else {\n    console.log("Please install MetaMask!");\n  }\n}\n\nfunction startApp(provider) {\n  if (provider !== window.ethereum) {\n    console.error("Do you have multiple wallets installed?");\n  }\n}\n\nwindow.addEventListener("load", setup);\n')),(0,r.yg)("h3",{id:"4-serve-the-project"},"4. Serve the project"),(0,r.yg)("p",null,"To test and verify your project works with MetaMask, serve your project through a local server.\nIf using VS Code and ",(0,r.yg)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer"},"Live Server"),", right-click the ",(0,r.yg)("inlineCode",{parentName:"p"},"index.html")," file, and select ",(0,r.yg)("strong",{parentName:"p"},"Open with Live Server"),". "),(0,r.yg)("p",null,"Alternatively, you can install ",(0,r.yg)("inlineCode",{parentName:"p"},"http-server")," using the following command:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"npm install -g http-server\n")),(0,r.yg)("p",null,"Then navigate to the project directory, and run ",(0,r.yg)("inlineCode",{parentName:"p"},"http-server"),". "),(0,r.yg)("p",null,"Open your browser and go to the provided local server URL (typically ",(0,r.yg)("a",{parentName:"p",href:"http://127.0.0.1:8080"},"http://127.0.0.1:8080"),")."),(0,r.yg)("h3",{id:"5-detect-a-users-network"},"5. Detect a user's network"),(0,r.yg)("p",null,(0,r.yg)("a",{parentName:"p",href:"/1202-tutorial/wallet/how-to/manage-networks/detect-network"},"Detect the user's network")," to ensure all RPC requests are submitted to the currently connected network.\nAdd the following code to ",(0,r.yg)("inlineCode",{parentName:"p"},"src/index.js"),", which uses the ",(0,r.yg)("a",{parentName:"p",href:"/wallet/reference/eth_chainId"},(0,r.yg)("inlineCode",{parentName:"a"},"eth_chainId")),"\nRPC method to detect the chain ID of the user's current network, and listens to the ",(0,r.yg)("a",{parentName:"p",href:"/wallet/reference/provider-api/#chainchanged"},(0,r.yg)("inlineCode",{parentName:"a"},"chainChanged"))," provider event to detect when the user changes networks:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:'title="index.js"',title:'"index.js"'},'const chainId = await window.ethereum \n  .request({ method: "eth_chainId" });\n\nwindow.ethereum\n  .on("chainChanged", handleChainChanged);\n\nfunction handleChainChanged(chainId) {\n  // We recommend reloading the page, unless you must do otherwise.\n  window.location.reload();\n}\n')),(0,r.yg)("h3",{id:"6-access-a-users-accounts"},"6. Access a user's accounts"),(0,r.yg)("p",null,"To interact with Ethereum on the user's behalf, such as sending transactions or requesting balances, your dapp needs to ",(0,r.yg)("a",{parentName:"p",href:"/1202-tutorial/wallet/how-to/connect/access-accounts"},"access the user's accounts")," by calling ",(0,r.yg)("a",{parentName:"p",href:"/wallet/reference/eth_requestaccounts"},(0,r.yg)("inlineCode",{parentName:"a"},"eth_requestAccounts")),"."),(0,r.yg)("p",null,"Add the following code to ",(0,r.yg)("inlineCode",{parentName:"p"},"src/index.js"),", which creates a button to allow users to connect to MetaMask from your dapp.\nSelecting the button activates the call to ",(0,r.yg)("inlineCode",{parentName:"p"},"eth_requestAccounts"),", allowing you to access the user's accounts."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js"',title:'"index.js"'},'// You should only attempt to request the user\'s account in response to user interaction, such as\n// selecting a button. Otherwise, you risk spamming the user. If you fail to retrieve\n// the user\'s account, you should encourage the user to initiate the attempt.\nconst ethereumButton = document.querySelector(".enableEthereumButton");\nconst showAccount = document.querySelector(".showAccount");\n\nethereumButton.addEventListener("click", () => {\n  getAccount();\n});\n\n// While awaiting the call to eth_requestAccounts, you should disable any buttons the user can\n// select to initiate the request. MetaMask rejects any additional requests while the first is still\n// pending.\nasync function getAccount() {\n  const accounts = await window.ethereum\n    .request({ method: "eth_requestAccounts" })\n      .catch((err) => {\n        if (err.code === 4001) {\n          // EIP-1193 userRejectedRequest error.\n          // If this happens, the user rejected the connection request.\n          console.log("Please connect to MetaMask.");\n        } else {\n          console.error(err);\n        }\n      });\n  const account = accounts[0];\n  showAccount.innerHTML = account;\n}\n')),(0,r.yg)("p",null,"Add the following HTML code to the body of ",(0,r.yg)("inlineCode",{parentName:"p"},"dist/index.html"),", which displays the button and the current account:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'\x3c!-- Display a connect button and the current account --\x3e\n<button class="enableEthereumButton">Enable Ethereum</button>\n<h2>Account: <span class="showAccount"></span></h2>\n')),(0,r.yg)("p",null,"To complete the tutorial, ",(0,r.yg)("a",{parentName:"p",href:"#4-serve-the-project"},"run the project on a local server")," to view the live dapp."),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)("p",null,"The following code samples contain the full simple dapp JavaScript and HTML code that this tutorial walks through. You can copy the following full examples to get started quickly."),(0,r.yg)("h3",{id:"javascript"},"JavaScript"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-jsx",metastring:'title="index.js"',title:'"index.js"'},"/*****************************************/\n/* Detect the MetaMask Ethereum provider */\n/*****************************************/\n\nimport detectEthereumProvider from '@metamask/detect-provider';\n\nconst provider = await detectEthereumProvider();\n\nif (!provider) {\n  console.log('Please install MetaMask!');\n} else {\n  if (provider !== window.ethereum) {\n    console.error('Do you have multiple wallets installed?');\n  }\n}\n\n/**********************************************************/\n/* Handle chain (network) and chainChanged (per EIP-1193) */\n/**********************************************************/\n\nconst handleChainChanged = () => {\n  window.location.reload();\n}; //Reload the page to reflect the new chain.\n\nwindow.ethereum.on('chainChanged', handleChainChanged);\n\n/***********************************************************/\n/* Handle user accounts and accountsChanged (per EIP-1193) */\n/***********************************************************/\n\nlet currentAccount = null;\n\nconst handleAccountsChanged = (accounts) => {\n  if (accounts.length === 0) {\n    console.log('Please connect to MetaMask.');\n  } else if (accounts[0] !== currentAccount) {\n    currentAccount = accounts[0];\n    showAccount.innerHTML = currentAccount;\n  }\n};\n\nwindow.ethereum.request({ method: 'eth_accounts' })\n  .then(handleAccountsChanged)\n  .catch((err) => {\n    console.error(err);\n  });\n\nwindow.ethereum.on('accountsChanged', handleAccountsChanged);\n\n/*********************************************/\n/* Access the user's accounts (per EIP-1102) */\n/*********************************************/\n\nconst ethereumButton = document.querySelector('.enableEthereumButton');\nconst showAccount = document.querySelector('.showAccount');\n\nethereumButton.addEventListener('click', async () => {\n  try {\n    const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    const account = accounts[0];\n    showAccount.innerHTML = account;\n  } catch (err) {\n    if (err.code === 4001) {\n      console.log('Please connect to MetaMask.');\n    } else {\n      console.error(err);\n    }\n  }\n});\n")),(0,r.yg)("h3",{id:"html"},"HTML"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<!DOCTYPE html>\n<html lang="en">\n<head>\n  <meta charset="UTF-8">\n  <meta name="viewport" content="width=device-width,initial-scale=1">\n  <title>Simple dapp</title>\n  <script type="module" src="index.js"><\/script>\n</head>\n<body>\n  \x3c!-- Display a connect button and the current account --\x3e\n  <button class="enableEthereumButton">Enable Ethereum</button>\n  <h2>Account: <span class="showAccount"></span></h2>\n</body>\n</html>\n')),(0,r.yg)("h2",{id:"conclusion"},"Conclusion"),(0,r.yg)("p",null,"You've successfully created a simple dapp and connected it to MetaMask using JavaScript and the ",(0,r.yg)("inlineCode",{parentName:"p"},"window.ethereum")," provider.\nWith this setup, your dapp can interact with MetaMask and allow users to securely access accounts and perform transactions on the Ethereum blockchain."))}d.isMDXComponent=!0}}]);