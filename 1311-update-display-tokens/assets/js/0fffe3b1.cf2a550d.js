"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[7170],{15680:(e,t,n)=>{n.d(t,{xA:()=>l,yg:()=>f});var a=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,p=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(p,".").concat(d)]||u[d]||m[d]||s;return n?a.createElement(f,o(o({ref:t},l),{},{components:n})):a.createElement(f,o({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,o=new Array(s);o[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},96257:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var a=n(58168),r=(n(96540),n(15680));const s={description:"Access the internet using the fetch function.",sidebar_position:8},o="Network access",i={unversionedId:"features/network-access",id:"features/network-access",title:"Network access",description:"Access the internet using the fetch function.",source:"@site/snaps/features/network-access.md",sourceDirName:"features",slug:"/features/network-access",permalink:"/1311-update-display-tokens/snaps/features/network-access",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/features/network-access.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{description:"Access the internet using the fetch function.",sidebar_position:8},sidebar:"snapsSidebar",previous:{title:"Localization",permalink:"/1311-update-display-tokens/snaps/features/localization"},next:{title:"Non-EVM networks",permalink:"/1311-update-display-tokens/snaps/features/non-evm-networks"}},p={},c=[{value:"Steps",id:"steps",level:2},{value:"1. Request permission to access the internet",id:"1-request-permission-to-access-the-internet",level:3},{value:"2. Use the <code>fetch</code> function",id:"2-use-the-fetch-function",level:3},{value:"Example",id:"example",level:2}],l={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.yg)(u,(0,a.A)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"network-access"},"Network access"),(0,r.yg)("p",null,"You can access the internet from a Snap using the global ",(0,r.yg)("inlineCode",{parentName:"p"},"fetch")," API."),(0,r.yg)("h2",{id:"steps"},"Steps"),(0,r.yg)("h3",{id:"1-request-permission-to-access-the-internet"},"1. Request permission to access the internet"),(0,r.yg)("p",null,"Request the ",(0,r.yg)("a",{parentName:"p",href:"/1311-update-display-tokens/snaps/reference/permissions#endowmentnetwork-access"},(0,r.yg)("inlineCode",{parentName:"a"},"endowment:network-access"))," permission,\nwhich exposes the global ",(0,r.yg)("inlineCode",{parentName:"p"},"fetch")," API to the Snaps execution environment.\nAdd the following to your Snap's manifest file:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-json",metastring:'title="snap.manifest.json"',title:'"snap.manifest.json"'},'"initialPermissions": {\n  "endowment:network-access": {}\n}\n')),(0,r.yg)("h3",{id:"2-use-the-fetch-function"},"2. Use the ",(0,r.yg)("inlineCode",{parentName:"h3"},"fetch")," function"),(0,r.yg)("p",null,"You can now use the ",(0,r.yg)("inlineCode",{parentName:"p"},"fetch")," function to access the internet.\nThe following example fetches a JSON file from the provided URL."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-ts",metastring:'title="index.ts"',title:'"index.ts"'},"async function getJson(url: string) {\n  const response = await fetch(url);\n  return await response.json();\n}\n")),(0,r.yg)("admonition",{title:"Same-origin policy and CORS",type:"info"},(0,r.yg)("p",{parentName:"admonition"},(0,r.yg)("inlineCode",{parentName:"p"},"fetch")," requests in a Snap are bound by the browser's\n",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy#cross-origin_network_access"},"same-origin policy"),".\nSince Snap code is executed in an iframe with the ",(0,r.yg)("inlineCode",{parentName:"p"},"sandbox")," property, the browser sends an ",(0,r.yg)("inlineCode",{parentName:"p"},"Origin"),"\nheader with the value ",(0,r.yg)("inlineCode",{parentName:"p"},"null")," with outgoing requests.\nFor the Snap to be able to read the response, the server must send an\n",(0,r.yg)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"},(0,r.yg)("inlineCode",{parentName:"a"},"Access-Control-Allow-Origin"))," CORS header\nwith the value ",(0,r.yg)("inlineCode",{parentName:"p"},"*")," or ",(0,r.yg)("inlineCode",{parentName:"p"},"null")," in the response.\nOtherwise, you might need to\n",(0,r.yg)("a",{parentName:"p",href:"https://stackoverflow.com/questions/43871637/no-access-control-allow-origin-header-is-present-on-the-requested-resource-whe/43881141#43881141"},"set up a proxy"),".")),(0,r.yg)("admonition",{type:"caution"},(0,r.yg)("p",{parentName:"admonition"},(0,r.yg)("inlineCode",{parentName:"p"},"XMLHttpRequest")," isn't available in Snaps, and you should replace it with ",(0,r.yg)("inlineCode",{parentName:"p"},"fetch"),".\nIf your dependencies use ",(0,r.yg)("inlineCode",{parentName:"p"},"XMLHttpRequest"),", you can\n",(0,r.yg)("a",{parentName:"p",href:"/1311-update-display-tokens/snaps/how-to/debug-a-snap/common-issues#patch-the-use-of-xmlhttprequest"},"patch it away"),".")),(0,r.yg)("h2",{id:"example"},"Example"),(0,r.yg)("p",null,"See the ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/MetaMask/snaps/tree/main/packages/examples/packages/network-access"},(0,r.yg)("inlineCode",{parentName:"a"},"@metamask/network-access-example-snap")),"\npackage for a full example of accessing the internet from a Snap.\nThis example exposes a ",(0,r.yg)("a",{parentName:"p",href:"/1311-update-display-tokens/snaps/learn/about-snaps/apis#custom-json-rpc-apis"},"custom JSON-RPC API")," for\ndapps to call the ",(0,r.yg)("inlineCode",{parentName:"p"},"fetch")," function from a Snap."))}m.isMDXComponent=!0}}]);