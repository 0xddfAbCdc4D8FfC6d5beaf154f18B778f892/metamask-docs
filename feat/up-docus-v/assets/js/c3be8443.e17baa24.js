"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[3557],{54885:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=t(74848),a=t(28453);const r={description:"Learn about convenience libraries.",sidebar_position:4},o="Convenience libraries",i={id:"concepts/convenience-libraries",title:"Convenience libraries",description:"Learn about convenience libraries.",source:"@site/wallet/concepts/convenience-libraries.md",sourceDirName:"concepts",slug:"/concepts/convenience-libraries",permalink:"/feat/up-docus-v/wallet/concepts/convenience-libraries",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/concepts/convenience-libraries.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{description:"Learn about convenience libraries.",sidebar_position:4},sidebar:"walletSidebar",previous:{title:"Android SDK architecture",permalink:"/feat/up-docus-v/wallet/concepts/sdk/android"},next:{title:"Signing methods",permalink:"/feat/up-docus-v/wallet/concepts/signing-methods"}},c={},l=[];function p(e){const n={a:"a",h1:"h1",p:"p",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"convenience-libraries",children:"Convenience libraries"}),"\n",(0,s.jsx)(n.p,{children:"Various convenience libraries exist for dapp developers.\nSome of them simplify the creation of specific user interface elements, some entirely manage the\nuser account onboarding, and others give you a variety of methods for interacting with smart\ncontracts, for a variety of API preferences (for example, promises, callbacks, and strong types)."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/feat/up-docus-v/wallet/concepts/wallet-api#ethereum-provider-api",children:"MetaMask Ethereum provider API"})," is very simple, and wraps\n",(0,s.jsx)(n.a,{href:"/feat/up-docus-v/wallet/concepts/wallet-api#json-rpc-api",children:"Ethereum JSON-RPC"})," formatted messages, which is why\nsome developers use a convenience library for interacting with the provider, such as\n",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/ethers",children:"Ethers"}),", ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/web3",children:"web3.js"}),", and\n",(0,s.jsx)(n.a,{href:"https://framework.embarklabs.io/",children:"Embark"}),".\nYou can refer to those tools' documentation to use them."]}),"\n",(0,s.jsxs)(n.p,{children:["You can ",(0,s.jsx)(n.a,{href:"/feat/up-docus-v/wallet/how-to/use-sdk/",children:"use MetaMask SDK"}),", which provides a reliable, secure, and\nseamless connection from your dapp to MetaMask.\nIt onboards users smoothly from multiple dapp platforms using the MetaMask browser extension or\nMetaMask Mobile, and your dapp can call any ",(0,s.jsx)(n.a,{href:"/feat/up-docus-v/wallet/concepts/wallet-api",children:"Wallet API"})," methods with the SDK installed."]}),"\n",(0,s.jsxs)(n.p,{children:["You can also ",(0,s.jsx)(n.a,{href:"/feat/up-docus-v/wallet/how-to/use-sdk/3rd-party-libraries/web3-onboard",children:"use Web3-Onboard with MetaMask SDK"}),"\nin your JavaScript dapp."]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(96540);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);