"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[35776],{56772:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>c,metadata:()=>o,toc:()=>l});var r=n(74848),s=n(28453),i=n(47220);const c={description:"Gas network documentation"},a="IPFS",o={id:"reference/ipfs/index",title:"IPFS",description:"Gas network documentation",source:"@site/services/reference/ipfs/index.md",sourceDirName:"reference/ipfs",slug:"/reference/ipfs/",permalink:"/test-integrate-infura/services/reference/ipfs/",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/reference/ipfs/index.md",tags:[],version:"current",frontMatter:{description:"Gas network documentation"},sidebar:"servicesSidebar",previous:{title:"Get EIP-1559 gas prices",permalink:"/test-integrate-infura/services/reference/gas-api/api-reference/gasprices-type2"},next:{title:"Quickstart",permalink:"/test-integrate-infura/services/reference/ipfs/quickstart"}},d={},l=[];function f(e){const t={h1:"h1",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"ipfs",children:"IPFS"}),"\n",(0,r.jsx)(i.A,{items:[{href:"quickstart",title:"Quickstart",description:"Learn how to quickly connect and make calls to the IPFS network."},{href:"json-rpc-methods",title:"JSON-RPC APIs",description:"View the APIs available for communicating with the IPFS network."},{href:"../../../developer-tools/dashboard/get-started/create-api/",title:"Create an API key",description:"Learn how to create an API key and secure and share it with your team."}]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(f,{...e})}):f(e)}},47220:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var r=n(20053),s=n(28774),i=n(49259),c=n(74848);function a(e){let{item:t}=e;const n=(0,c.jsxs)(c.Fragment,{children:[t.title&&(0,c.jsxs)("h2",{className:(0,r.A)(i.A.cardTitle),children:[t.icon&&(0,c.jsx)("img",{src:t.icon,className:i.A.cardIcon}),(0,c.jsx)("span",{children:t.title})]}),t.description&&(0,c.jsx)("p",{children:t.description})]}),a=(0,r.A)("card","padding--lg",i.A.cardContainer,{[i.A.flaskOnly]:t.flaskOnly});return t.href?(0,c.jsx)(s.A,{className:a,href:t.href,children:n}):(0,c.jsx)("div",{className:a,children:n})}function o(e){const{items:t}=e;return(0,c.jsx)("section",{className:"row",children:t.map(((e,t)=>(0,c.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,c.jsx)(a,{item:e})},t)))})}},20053:(e,t,n)=>{function r(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(s&&(s+=" "),s+=n);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}n.d(t,{A:()=>s});const s=function(){for(var e,t,n=0,s="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(s&&(s+=" "),s+=t);return s}},49259:(e,t,n)=>{n.d(t,{A:()=>r});const r={cardContainer:"cardContainer_C0Dw",flaskOnly:"flaskOnly_ADUl",cardTitle:"cardTitle_ZNcV",cardIcon:"cardIcon_naep"}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var r=n(96540);const s={},i=r.createContext(s);function c(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);