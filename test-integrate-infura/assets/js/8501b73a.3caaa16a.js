"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[42466],{86525:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=t(74848),i=t(28453);const o={description:"WebSockets conceptual information.",sidebar_position:7},r="WebSockets",c={id:"concepts/websockets",title:"WebSockets",description:"WebSockets conceptual information.",source:"@site/services/concepts/websockets.md",sourceDirName:"concepts",slug:"/concepts/websockets",permalink:"/test-integrate-infura/services/concepts/websockets",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/concepts/websockets.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{description:"WebSockets conceptual information.",sidebar_position:7},sidebar:"servicesSidebar",previous:{title:"Gas",permalink:"/test-integrate-infura/services/concepts/gas"},next:{title:"Web3 libraries",permalink:"/test-integrate-infura/services/concepts/web3-libraries"}},a={},l=[{value:"Subscriptions over WebSockets",id:"subscriptions-over-websockets",level:2},{value:"Supported networks",id:"supported-networks",level:2},{value:"WebSockets use cases",id:"websockets-use-cases",level:2},{value:"Pricing",id:"pricing",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"websockets",children:"WebSockets"}),"\n",(0,s.jsx)(n.p,{children:"The WebSockets (WSS) communication protocol enables two-way communication between a client and a server over a single TCP\nconnection. The communication protocol maintains a network connection between the two parties, allowing for real-time, low-latency\ncommunication. WebSockets allow for ongoing, bidirectional communication unlike HTTP, which is a request-response protocol."}),"\n",(0,s.jsx)(n.h2,{id:"subscriptions-over-websockets",children:"Subscriptions over WebSockets"}),"\n",(0,s.jsx)(n.p,{children:"WebSockets allow you to create stateful subscriptions, which is a type of subscription where the server maintains a record\nof the client's subscription state. This means that the server remembers what data the client has requested and sent\npreviously, and only sends new data that has changed or meets the client's subscription criteria."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Stateless HTTP WebSocket calls are also supported."})}),"\n",(0,s.jsxs)(n.p,{children:["You can create stateful subscriptions over WebSockets to subscribe to specific events on the blockchain. The following\nsubscription types are available using the ",(0,s.jsx)(n.a,{href:"../network-apis/ethereum/json-rpc-methods/subscription-methods/eth_subscribe.mdx",children:(0,s.jsx)(n.code,{children:"eth_subscribe"})})," JSON-RPC API:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"newHeads"})," subscription type emits an event when a new header (block) is added to the chain, including during a\nchain reorganization."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"logs"})," subscription type emits logs that match a specified topic filter and are included in newly added blocks.\nWe ",(0,s.jsx)(n.strong,{children:"strongly"})," recommend specifying a filter when subscribing to the ",(0,s.jsx)(n.code,{children:"logs"})," subscription type."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"newPendingTransactions"})," subscription type subscribes to all pending transactions via\nWebSockets (regardless if you sent them or not), and returns their transaction hashes."]}),"\n"]}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["For information about how to use the subscription methods to subscribe to events, see the ",(0,s.jsx)(n.a,{href:"../network-apis/ethereum/json-rpc-methods/subscription-methods/eth_subscribe.mdx",children:(0,s.jsx)(n.code,{children:"eth_subscribe"})})," JSON-RPC method, or see the following tutorials:"]}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers",children:"Track ERC-20 token transfers"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/subscribe-to-pending-transactions",children:"Subscribe to pending transactions on Ethereum"})}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"supported-networks",children:"Supported networks"}),"\n",(0,s.jsx)(n.p,{children:"Infura support subscriptions over WebSockets for the following networks:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ethereum"}),"\n",(0,s.jsx)(n.li,{children:"Arbitrum"}),"\n",(0,s.jsx)(n.li,{children:"Avalanche (C-Chain)"}),"\n",(0,s.jsx)(n.li,{children:"Linea"}),"\n",(0,s.jsx)(n.li,{children:"Optimism"}),"\n",(0,s.jsx)(n.li,{children:"Polygon"}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"WebSocket support is currently in public beta for Arbitrum, Avalanche (C-Chain) and Optimism."})}),"\n",(0,s.jsx)(n.h2,{id:"websockets-use-cases",children:"WebSockets use cases"}),"\n",(0,s.jsx)(n.p,{children:"Create stateful subscriptions over WebSockets to listen to specific events. Example use cases include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Listen when a new NFT is minted by an NFT minting smart contract, this enables your application to update its count of minted NFTs."}),"\n",(0,s.jsx)(n.li,{children:"Listen to a smart contract for the latest token price so that price can be reflected immediately on the application to end users."}),"\n",(0,s.jsx)(n.li,{children:"Receive updates for cryptocurrency market trades, orders, and Best Bid Offers (BBO)."}),"\n",(0,s.jsx)(n.li,{children:"Receive the latest token transfers for an address."}),"\n",(0,s.jsx)(n.li,{children:"Receive notifications about each new block added to the blockchain."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"pricing",children:"Pricing"}),"\n",(0,s.jsxs)(n.p,{children:["WebSocket activity is counted toward your daily request limits. View the ",(0,s.jsx)(n.a,{href:"https://www.infura.io/pricing",children:"Infura pricing"}),"\nfor more information about your request limits."]}),"\n",(0,s.jsx)(n.admonition,{title:"Pricing model may change",type:"info",children:(0,s.jsx)(n.p,{children:"Infura might change the pricing model and implement some limitations on subscriptions over WebSockets in the future. Before\nimplementing any changes, customers will receive advanced notification, so they can consider the best option for their needs."})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);