"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[73837],{49181:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>u});var r=t(74848),a=t(28453),s=t(11470),i=t(19365);const c={description:"Track ERC-721 and ERC-1155 token transfers."},o="Track ERC-721 and ERC-1155 token transfers",l={id:"tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers",title:"Track ERC-721 and ERC-1155 token transfers",description:"Track ERC-721 and ERC-1155 token transfers.",source:"@site/services/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers.md",sourceDirName:"tutorials/ethereum",slug:"/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers",permalink:"/test-integrate-infura/services/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers.md",tags:[],version:"current",frontMatter:{description:"Track ERC-721 and ERC-1155 token transfers."},sidebar:"servicesSidebar",previous:{title:"Track ERC-20 token transfers",permalink:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers"},next:{title:"Use Infura as a reverse proxy",permalink:"/test-integrate-infura/services/tutorials/ethereum/use-infura-as-a-reverse-proxy"}},d={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Create a project directory",id:"1-create-a-project-directory",level:3},{value:"2. Install required packages",id:"2-install-required-packages",level:3},{value:"3. Set up the script",id:"3-set-up-the-script",level:3},{value:"4. Subscribe to contract events",id:"4-subscribe-to-contract-events",level:3},{value:"5. Read ERC-721 transfers",id:"5-read-erc-721-transfers",level:3},{value:"6. Read ERC-1155 transfers",id:"6-read-erc-1155-transfers",level:3},{value:"7. Track a specific address",id:"7-track-a-specific-address",level:3},{value:"8. Track a specific token",id:"8-track-a-specific-token",level:3},{value:"9. Run the script",id:"9-run-the-script",level:3},{value:"Complete code overview",id:"complete-code-overview",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"track-erc-721-and-erc-1155-token-transfers",children:"Track ERC-721 and ERC-1155 token transfers"}),"\n",(0,r.jsx)(n.p,{children:"In this tutorial, you'll track ERC-721 and ERC-1155 token transfers and mints from a specific address using the Web3 JavaScript library."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["An ",(0,r.jsx)(n.a,{href:"/test-integrate-infura/services/get-started/infura",children:"Ethereum project"})," on Infura"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"Node.js installed"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,r.jsx)(n.h3,{id:"1-create-a-project-directory",children:"1. Create a project directory"}),"\n",(0,r.jsx)(n.p,{children:"Create a new directory for your project. This can be done from the command line:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"mkdir trackERC721\n"})}),"\n",(0,r.jsx)(n.p,{children:"Change into the new directory:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"cd trackERC721\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-install-required-packages",children:"2. Install required packages"}),"\n",(0,r.jsxs)(n.p,{children:["Install the ",(0,r.jsx)(n.code,{children:"web3"})," package in the project directory:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"npm install web3\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"This example has been written for web3js v4.x. It may not work for earlier versions."})}),"\n",(0,r.jsx)(n.h3,{id:"3-set-up-the-script",children:"3. Set up the script"}),"\n",(0,r.jsxs)(n.p,{children:["Create a file called ",(0,r.jsx)(n.code,{children:"trackERC721.js"}),". At the top of file, add the following lines to import the web3.js library and connect to the Infura WebSocket endpoint:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const { Web3 } = require("web3");\n\nasync function main(){\n  const web3 = new Web3("wss://mainnet.infura.io/ws/v3/<YOUR_API_KEY>");\n  ...\n}\nmain();\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Make sure to replace ",(0,r.jsx)(n.code,{children:"<YOUR_API_KEY>"})," with your Infura API key."]}),"\n",(0,r.jsx)(n.h3,{id:"4-subscribe-to-contract-events",children:"4. Subscribe to contract events"}),"\n",(0,r.jsx)(n.p,{children:"You can subscribe to the events that token contracts emit, allowing you to track every new token transfer as it occurs."}),"\n",(0,r.jsxs)(n.p,{children:["Add the following filter to the script, which tells the ",(0,r.jsx)(n.code,{children:"web3.eth.subscribe"})," function in web3.js which events to track:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let options721 = {\n  topics: [web3.utils.sha3("Transfer(address,address,uint256)")],\n};\n\nlet options1155 = {\n  topics: [\n    web3.utils.sha3("TransferSingle(address,address,address,uint256,uint256)"),\n  ],\n};\n'})}),"\n",(0,r.jsx)(n.p,{children:"Then, initiate the subscription by passing along the filter:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let subscription721 = await web3.eth.subscribe("logs", options721);\nlet subscription1155 = await web3.eth.subscribe("logs", options1155);\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["In ",(0,r.jsx)(n.a,{href:"#3-set-up-the-script",children:"step 3"}),", you wrap the whole script in an async function ",(0,r.jsx)(n.code,{children:"main()"}),", because top level await is not allowed except in recent JavaScript versions."]})}),"\n",(0,r.jsx)(n.p,{children:"You can also add the following lines to the script to see whether the subscription started successfully or if any errors occurred:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'subscription721.on("error", (err) => {\n  throw err;\n});\nsubscription1155.on("error", (err) => {\n  throw err;\n});\n\nsubscription721.on("connected", (nr) =>\n  console.log("Subscription on ERC-721 started with ID %s", nr),\n);\nsubscription1155.on("connected", (nr) =>\n  console.log("Subscription on ERC-1155 started with ID %s", nr),\n);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"5-read-erc-721-transfers",children:"5. Read ERC-721 transfers"}),"\n",(0,r.jsxs)(n.p,{children:["Set the listener for the ",(0,r.jsx)(n.code,{children:"subscription721"})," created in ",(0,r.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers#4.-subscribe-to-contract-events",children:"step 4"})," by adding the following lines to the script:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"subscription721.on('data', event => {\n    if (event.topics.length == 4) {\n        ...\n    }\n});\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["To verify that the ",(0,r.jsx)(n.code,{children:"Transfer"})," event you catch is an ERC-721 transfer, these lines check to see whether the length of the ",(0,r.jsx)(n.code,{children:"topics"})," array equals 4. This is because ERC-20 events also emit a ",(0,r.jsx)(n.code,{children:"Transfer"})," event but contain three items instead."]})}),"\n",(0,r.jsx)(n.p,{children:"Because you can't read the event topics on their own, you must decode them using the ERC-721 ABI. Edit the listener as follows:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let transaction = web3.eth.abi.decodeLog(\n  [\n    {\n      type: "address",\n      name: "from",\n      indexed: true,\n    },\n    {\n      type: "address",\n      name: "to",\n      indexed: true,\n    },\n    {\n      type: "uint256",\n      name: "tokenId",\n      indexed: true,\n    },\n  ],\n  event.data,\n  [event.topics[1], event.topics[2], event.topics[3]],\n);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In order to directly call ",(0,r.jsx)(n.code,{children:"from"}),", ",(0,r.jsx)(n.code,{children:"to"}),", and ",(0,r.jsx)(n.code,{children:"tokenId"})," on ",(0,r.jsx)(n.code,{children:"transaction"}),", add the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log(\n  `\\n` +\n    `New ERC-712 transaction found in block ${event.blockNumber} with hash ${event.transactionHash}\\n` +\n    `From: ${\n      transaction.from === "0x0000000000000000000000000000000000000000"\n        ? "New mint!"\n        : transaction.from\n    }\\n` +\n    `To: ${transaction.to}\\n` +\n    `Token contract: ${event.address}\\n` +\n    `Token ID: ${transaction.tokenId}`,\n);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"6-read-erc-1155-transfers",children:"6. Read ERC-1155 transfers"}),"\n",(0,r.jsxs)(n.p,{children:["You can set the listener for the ",(0,r.jsx)(n.code,{children:"subscription1155"})," created in ",(0,r.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers#4.-subscribe-to-contract-events",children:"step 4"})," by adding the following lines to the script:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"subscription1155.on('data', event => {\n    ...\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As with ERC-721 in ",(0,r.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-721-and-erc-1155-token-transfers#5.-read-erc-721-transfers",children:"Step 5"}),", add the ERC-1155 ABI to the listener:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'let transaction = web3.eth.abi.decodeLog(\n  [\n    {\n      type: "address",\n      name: "operator",\n      indexed: true,\n    },\n    {\n      type: "address",\n      name: "from",\n      indexed: true,\n    },\n    {\n      type: "address",\n      name: "to",\n      indexed: true,\n    },\n    {\n      type: "uint256",\n      name: "id",\n    },\n    {\n      type: "uint256",\n      name: "value",\n    },\n  ],\n  event.data,\n  [event.topics[1], event.topics[2], event.topics[3]],\n);\n'})}),"\n",(0,r.jsxs)(n.p,{children:["In order to directly call ",(0,r.jsx)(n.code,{children:"from"}),", ",(0,r.jsx)(n.code,{children:"to"}),", and ",(0,r.jsx)(n.code,{children:"tokenId"})," on ",(0,r.jsx)(n.code,{children:"transaction"}),", add the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'console.log(\n  `\\n` +\n    `New ERC-1155 transaction found in block ${event.blockNumber} with hash ${event.transactionHash}\\n` +\n    `Operator: ${transaction.operator}\\n` +\n    `From: ${\n      transaction.from === "0x0000000000000000000000000000000000000000"\n        ? "New mint!"\n        : transaction.from\n    }\\n` +\n    `To: ${transaction.to}\\n` +\n    `id: ${transaction.id}\\n` +\n    `value: ${transaction.value}`,\n);\n'})}),"\n",(0,r.jsx)(n.h3,{id:"7-track-a-specific-address",children:"7. Track a specific address"}),"\n",(0,r.jsxs)(n.p,{children:["You can track a specific sender address by reading the ",(0,r.jsx)(n.code,{children:"from"})," value of the decoded ",(0,r.jsx)(n.code,{children:"transaction"})," object. For each of the listeners, add the following line, replacing ",(0,r.jsx)(n.code,{children:"<SENDER_ADDRESS>"})," with the Ethereum address to track:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'if (transaction.from == "<SENDER_ADDRESS>") {\n  console.log("Specified address sent an NFT!");\n}\n'})}),"\n",(0,r.jsxs)(n.p,{children:["You can also track a specific recipient address receiving any tokens by tracking the ",(0,r.jsx)(n.code,{children:"transaction.to"})," value:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'if (transaction.to == "<RECIPIENT_ADDRESS>") {\n  console.log("Specified address received an NFT");\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"8-track-a-specific-token",children:"8. Track a specific token"}),"\n",(0,r.jsxs)(n.p,{children:["You can track a specific address sending a specific token, by checking for both ",(0,r.jsx)(n.code,{children:"event.address"})," and ",(0,r.jsx)(n.code,{children:"transaction.tokenID"}),". For each of the listeners, add the following line, replacing ",(0,r.jsx)(n.code,{children:"<CONTRACT_ADDRESS>"})," with the smart contract address to track and ",(0,r.jsx)(n.code,{children:"<TOKEN_ID>"})," with specific transaction token ID:"]}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(i.A,{value:"ERC-721",label:"ERC-721",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"if (event.address == '<CONTRACT_ADDRESS>' && transaction.tokenId == <TOKEN_ID>) { ('console.log('Specified ERC-721 NFT was transferred!') };\n"})})}),(0,r.jsx)(i.A,{value:"ERC-1155",label:"ERC-1155",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'if (event.address == "<CONTRACT_ADDRESS>") {\n  console.log("Specified ERC-1155 NFT was transferred!");\n}\n'})})})]}),"\n",(0,r.jsx)(n.h3,{id:"9-run-the-script",children:"9. Run the script"}),"\n",(0,r.jsx)(n.p,{children:"Run the script using the following command:"}),"\n",(0,r.jsxs)(s.A,{children:[(0,r.jsx)(i.A,{value:"Command",label:"Command",default:!0,children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"node trackERC721.js\n"})})}),(0,r.jsx)(i.A,{value:"Example ERC-721 output",label:"Example ERC-721 output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"New ERC-721 transaction found in block 15102209 with hash 0x3b133c1ad2d138bee9a596d94da25892e12a2c95efd1f0916d6708a9b86745b0\nFrom: 0xDd3c42eb2660c0C7745E48f25864ff743Fef9f33\nTo: 0x4c5Ca726584d9b171AE9D6ce67Ab8AFb706259CB\nToken contract: 0x35f3b8f37e9341F289398b70Fa2c576Dd102DF75\nToken ID: 950\n"})})}),(0,r.jsx)(i.A,{value:"Example ERC-1155 output",label:"Example ERC-1155 output",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"New ERC-1155 transaction found in block 15102209 with hash 0xa08afd7696ec7424f8b403ca3733ebbb916faf68442757e2e9349c2d1b90aa9a\nOperator: 0x20251a0505Ead51fb2C6ce5c1f399924ea068322\nFrom: New mint!\nTo: 0x20251a0505Ead51fb2C6ce5c1f399924ea068322\nid: 2\nvalue: 1\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"complete-code-overview",children:"Complete code overview"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const { Web3 } = require("web3");\n\nasync function main() {\n  const web3 = new Web3(\n    "wss://mainnet.infura.io/ws/v3/<YOUR_API_KEY>"\n  );\n\n  let options721 = {\n    topics: [web3.utils.sha3("Transfer(address,address,uint256)")],\n  };\n\n  let options1155 = {\n    topics: [\n      web3.utils.sha3(\n        "TransferSingle(address,address,address,uint256,uint256)"\n      ),\n    ],\n  };\n\n  let subscription721 = await web3.eth.subscribe("logs", options721);\n  let subscription1155 = await web3.eth.subscribe("logs", options1155);\n\n  subscription721.on("data", (event) => {\n    if (event.topics.length == 4) {\n      let transaction = web3.eth.abi.decodeLog(\n        [\n          {\n            type: "address",\n            name: "from",\n            indexed: true,\n          },\n          {\n            type: "address",\n            name: "to",\n            indexed: true,\n          },\n          {\n            type: "uint256",\n            name: "tokenId",\n            indexed: true,\n          },\n        ],\n        event.data,\n        [event.topics[1], event.topics[2], event.topics[3]]\n      );\n\n      if (transaction.from == "0x495f947276749ce646f68ac8c248420045cb7b5e") {\n        console.log("Specified address sent an NFT!");\n      }\n      if (transaction.to == "0x495f947276749ce646f68ac8c248420045cb7b5e") {\n        console.log("Specified address received an NFT!");\n      }\n      if (\n        event.address == "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D" &&\n        transaction.tokenId == 2500\n      ) {\n        console.log("Specified NFT was transferred!");\n      }\n\n      console.log(\n        `\\n` +\n          `New ERC-712 transaction found in block ${event.blockNumber} with hash ${event.transactionHash}\\n` +\n          `From: ${\n            transaction.from === "0x0000000000000000000000000000000000000000"\n              ? "New mint!"\n              : transaction.from\n          }\\n` +\n          `To: ${transaction.to}\\n` +\n          `Token contract: ${event.address}\\n` +\n          `Token ID: ${transaction.tokenId}`\n      );\n    }\n  });\n\n  subscription1155.on("data", (event) => {\n    let transaction = web3.eth.abi.decodeLog(\n      [\n        {\n          type: "address",\n          name: "operator",\n          indexed: true,\n        },\n        {\n          type: "address",\n          name: "from",\n          indexed: true,\n        },\n        {\n          type: "address",\n          name: "to",\n          indexed: true,\n        },\n        {\n          type: "uint256",\n          name: "id",\n        },\n        {\n          type: "uint256",\n          name: "value",\n        },\n      ],\n      event.data,\n      [event.topics[1], event.topics[2], event.topics[3]]\n    );\n\n    console.log(\n      `\\n` +\n        `New ERC-1155 transaction found in block ${event.blockNumber} with hash ${event.transactionHash}\\n` +\n        `Operator: ${transaction.operator}\\n` +\n        `From: ${\n          transaction.from === "0x0000000000000000000000000000000000000000"\n            ? "New mint!"\n            : transaction.from\n        }\\n` +\n        `To: ${transaction.to}\\n` +\n        `id: ${transaction.id}\\n` +\n        `value: ${transaction.value}`\n    );\n  });\n\n  subscription721.on("error", (err) => {\n    throw err;\n  });\n  subscription1155.on("error", (err) => {\n    throw err;\n  });\n\n  subscription721.on("connected", (nr) =>\n    console.log("Subscription on ERC-721 started with ID %s", nr)\n  );\n  subscription1155.on("connected", (nr) =>\n    console.log("Subscription on ERC-1155 started with ID %s", nr)\n  );\n}\n\nmain();\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>i});t(96540);var r=t(18215);const a={tabItem:"tabItem_Ymn6"};var s=t(74848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,r.A)(a.tabItem,i),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(96540),a=t(18215),s=t(23104),i=t(56347),c=t(205),o=t(57485),l=t(31682),d=t(70679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:a}}=e;return{value:n,label:t,attributes:r,default:a}}))}(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const a=(0,i.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,r.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(a.location.search);n.set(s,e),a.replace({...a.location,search:n.toString()})}),[s,a])]}function b(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,s=h(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:s}))),[l,u]=f({queryString:t,groupId:a}),[b,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,s]=(0,d.Dv)(t);return[a,(0,r.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:a}),v=(()=>{const e=l??b;return p({value:e,tabValues:s})?e:null})();(0,c.A)((()=>{v&&o(v)}),[v]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),m(e)}),[u,m,s]),tabValues:s}}var m=t(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function j(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:c}=e;const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),a=c[t].value;a!==r&&(l(n),i(a))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:c.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>o.push(e),onKeyDown:u,onClick:d,...s,className:(0,a.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:a}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function k(e){const n=b(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",v.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(g,{...n,...e})]})}function w(e){const n=(0,m.A)();return(0,x.jsx)(k,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var r=t(96540);const a={},s=r.createContext(a);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);