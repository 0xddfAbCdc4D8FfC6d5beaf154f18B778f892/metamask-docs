"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[57562],{4103:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=t(74848),r=t(28453),s=t(11470),c=t(19365);const i={description:"Track ERC-20 token transfers."},o="Track ERC-20 token transfers",l={id:"tutorials/ethereum/track-erc-20-token-transfers",title:"Track ERC-20 token transfers",description:"Track ERC-20 token transfers.",source:"@site/services/tutorials/ethereum/track-erc-20-token-transfers.md",sourceDirName:"tutorials/ethereum",slug:"/tutorials/ethereum/track-erc-20-token-transfers",permalink:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/tutorials/ethereum/track-erc-20-token-transfers.md",tags:[],version:"current",frontMatter:{description:"Track ERC-20 token transfers."}},d={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Create a project directory",id:"1-create-a-project-directory",level:3},{value:"2. Install required packages",id:"2-install-required-packages",level:3},{value:"3. Set up the script",id:"3-set-up-the-script",level:3},{value:"4. Set the ABI",id:"4-set-the-abi",level:3},{value:"5. Subscribe to contract events",id:"5-subscribe-to-contract-events",level:3},{value:"6. Read ERC-20 transfers",id:"6-read-erc-20-transfers",level:3},{value:"7. Read contract data",id:"7-read-contract-data",level:3},{value:"8. Track a specific address",id:"8-track-a-specific-address",level:3},{value:"9. Track a specific token",id:"9-track-a-specific-token",level:3},{value:"10. Run the script",id:"10-run-the-script",level:3},{value:"Complete code overview",id:"complete-code-overview",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"track-erc-20-token-transfers",children:"Track ERC-20 token transfers"}),"\n",(0,a.jsxs)(n.p,{children:["In this tutorial, you'll track ",(0,a.jsx)(n.a,{href:"../../network-apis/ethereum/how-to/interact-with-erc-20-tokens.md",children:"ERC-20 token"})," transfers from a specific address using the Web3 JavaScript library."]}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["An ",(0,a.jsx)(n.a,{href:"/test-integrate-infura/services/get-started/infura",children:"Ethereum project"})," on Infura"]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"Node.js installed"})}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,a.jsx)(n.h3,{id:"1-create-a-project-directory",children:"1. Create a project directory"}),"\n",(0,a.jsx)(n.p,{children:"Create a new directory for your project. This can be done from the command line:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir trackERC20\n"})}),"\n",(0,a.jsx)(n.p,{children:"Change into the new directory:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd trackERC20\n"})}),"\n",(0,a.jsx)(n.h3,{id:"2-install-required-packages",children:"2. Install required packages"}),"\n",(0,a.jsxs)(n.p,{children:["Install the ",(0,a.jsx)(n.code,{children:"web3"})," package in the project directory:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install web3\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"This example has been written for web3js v4.x. It may not work for earlier versions."})}),"\n",(0,a.jsx)(n.h3,{id:"3-set-up-the-script",children:"3. Set up the script"}),"\n",(0,a.jsxs)(n.p,{children:["Create a file called ",(0,a.jsx)(n.code,{children:"trackERC20.js"}),". At the top of file, add the following lines to import the web3.js library and connect to the Infura WebSocket endpoint:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const { Web3 } = require("web3");\n\nasync function main(){\n  const web3 = new Web3("wss://mainnet.infura.io/ws/v3/<YOUR_API_KEY>");\n  ...\n}\nmain();\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Make sure to replace ",(0,a.jsx)(n.code,{children:"<YOUR_API_KEY>"})," with your Infura API key."]}),"\n",(0,a.jsx)(n.h3,{id:"4-set-the-abi",children:"4. Set the ABI"}),"\n",(0,a.jsx)(n.p,{children:"Define the ERC-20 ABI by adding the following to the script:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-json",children:'  const abi = [\n    {\n      constant: true,\n      inputs: [],\n      name: "symbol",\n      outputs: [\n        {\n          name: "",\n          type: "string",\n        },\n      ],\n      payable: false,\n      stateMutability: "view",\n      type: "function",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: "decimals",\n      outputs: [\n        {\n          name: "",\n          type: "uint8",\n        },\n      ],\n      payable: false,\n      stateMutability: "view",\n      type: "function",\n    },\n  ];\n'})}),"\n",(0,a.jsx)(n.h3,{id:"5-subscribe-to-contract-events",children:"5. Subscribe to contract events"}),"\n",(0,a.jsx)(n.p,{children:"You can subscribe to the events that token contracts emit, allowing you to track every new token transfer as it occurs."}),"\n",(0,a.jsxs)(n.p,{children:["Add the following filter to the script, which tells the ",(0,a.jsx)(n.code,{children:"web3.eth.subscribe"})," function in web3.js which events to track:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'  let options = {\n    topics: [web3.utils.sha3("Transfer(address,address,uint256)")],\n  };\n'})}),"\n",(0,a.jsx)(n.p,{children:"Then, initiate the subscription by passing along the filter:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'  let subscription = await web3.eth.subscribe("logs", options);\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["In ",(0,a.jsx)(n.a,{href:"#3-set-up-the-script",children:"step 3"}),", you wrap the whole script in an async function ",(0,a.jsx)(n.code,{children:"main()"}),", because top level await is not allowed except in recent JavaScript versions."]})}),"\n",(0,a.jsx)(n.p,{children:"You can also add the following lines to the script to see whether the subscription started successfully or if any errors occurred:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'  subscription.on("error", (err) => {\n    throw err;\n  });\n  subscription.on("connected", (nr) =>\n    console.log("Subscription on ERC-20 started with ID %s", nr),\n  );\n'})}),"\n",(0,a.jsx)(n.h3,{id:"6-read-erc-20-transfers",children:"6. Read ERC-20 transfers"}),"\n",(0,a.jsxs)(n.p,{children:["You can set the listener for the ",(0,a.jsx)(n.code,{children:"subscription"})," created in ",(0,a.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers#5-subscribe-to-contract-events",children:"step 5"})," by adding the following lines to the script:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'  subscription.on("data", (event) => {\n    if (event.topics.length == 3) {\n  \t...\n    }\n});\n'})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["To verify that the ",(0,a.jsx)(n.code,{children:"Transfer"})," event you catch is an ERC-20 transfer, these lines check to see whether the length of the ",(0,a.jsx)(n.code,{children:"topics"})," array equals 3. This is because ERC-721 events also emit a ",(0,a.jsx)(n.code,{children:"Transfer"})," event but contain four items instead."]})}),"\n",(0,a.jsx)(n.p,{children:"Because you can't read the event topics on their own, you must decode them using the ERC-20 ABI. Edit the listener as follows:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'  subscription.on("data", (event) => {\n    if (event.topics.length == 3) {\n      let transaction = web3.eth.abi.decodeLog(\n        [\n          {\n            type: "address",\n            name: "from",\n            indexed: true,\n          },\n          {\n            type: "address",\n            name: "to",\n            indexed: true,\n          },\n          {\n            type: "uint256",\n            name: "value",\n            indexed: false,\n          },\n        ],\n        event.data,\n        [event.topics[0], event.topics[1], event.topics[2]],\n      );\n'})}),"\n",(0,a.jsxs)(n.p,{children:["You can now retrieve the sender address (",(0,a.jsx)(n.code,{children:"from"}),"), receiving address (",(0,a.jsx)(n.code,{children:"to"}),"), and the number of tokens transferred (",(0,a.jsx)(n.code,{children:"value"}),", though yet to be converted, see ",(0,a.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers#7-read-contract-data",children:"step 7"}),") from the ",(0,a.jsx)(n.code,{children:"transaction"})," object."]}),"\n",(0,a.jsx)(n.h3,{id:"7-read-contract-data",children:"7. Read contract data"}),"\n",(0,a.jsxs)(n.p,{children:["Even though you retrieve a ",(0,a.jsx)(n.code,{children:"value"})," from the contract, this isn't the actual number of tokens transferred. ERC-20 tokens contain a ",(0,a.jsx)(n.code,{children:"decimal"})," value, which indicates the number of decimals a token should have. You can directly call the ",(0,a.jsx)(n.code,{children:"decimals"})," method of the smart contract to retrieve the decimal value, after which you can calculate the correct number of tokens sent."]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsxs)(n.p,{children:["It is optional for ERC-20 contracts to implement these methods (see ",(0,a.jsx)(n.a,{href:"https://eips.ethereum.org/EIPS/eip-20#methods",children:"EIP-20: ERC-20 Token Standard"}),"), so you check for errors and fall back to default values."]})}),"\n",(0,a.jsxs)(n.p,{children:["Outside the ",(0,a.jsx)(n.code,{children:"subscription.on()"})," listener created in ",(0,a.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers#6-read-erc-20-transfers",children:"step 6"}),", define a new method that allows you to collect more information from the smart contract:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"  async function collectData(contract) {\n    try {\n      var decimals = await contract.methods.decimals().call();\n    }\n    catch {\n      decimals = 18n;\n    }\n    try {\n      var symbol = await contract.methods.symbol().call();\n    }\n    catch {\n      symbol = '???';\n    }\n    return { decimals, symbol };\n  }\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Since you\u2019re already requesting the ",(0,a.jsx)(n.code,{children:"decimals"})," value from the contract, you can also request the ",(0,a.jsx)(n.code,{children:"symbol"})," value to display the ticker of the token."]})}),"\n",(0,a.jsxs)(n.p,{children:["Inside the listener, call the ",(0,a.jsx)(n.code,{children:"collectData"})," function every time a new ERC-20 transaction is found. You can also calculate the correct decimal value:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'  subscription.on("data", (event) => {\n    if (event.topics.length == 3) {\n      let transaction = web3.eth.abi.decodeLog(\n\t    ...\n\t    );\n\n    const contract = new web3.eth.Contract(abi, event.address);\n    collectData(contract).then((contractData) => {\n      var unit = Object.keys(web3.utils.ethUnitMap).find(\n        (key) => web3.utils.ethUnitMap[key] == (BigInt(10) ** contractData.decimals)\n      );\n      if (!unit) {\n        // Simplification for contracts that use "non-standard" units, e.g. REDDIT contract returns decimals==8\n        unit = "wei"\n      }\n      const value = web3.utils.fromWei(transaction.value, unit);\n      console.log(\n        `Transfer of ${value+\' \'.repeat(Math.max(0,30-value.length))} ${\n          contractData.symbol+\' \'.repeat(Math.max(0,10-contractData.symbol.length))\n        } from ${transaction.from} to ${transaction.to}`,\n      );\n'})}),"\n",(0,a.jsx)(n.h3,{id:"8-track-a-specific-address",children:"8. Track a specific address"}),"\n",(0,a.jsxs)(n.p,{children:["You can track a specific sender address by reading the ",(0,a.jsx)(n.code,{children:"from"})," value of the decoded ",(0,a.jsx)(n.code,{children:"transaction"})," object. Add the following line to the listener created in ",(0,a.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers#6-read-erc-20-transfers",children:"step 6"}),", replacing ",(0,a.jsx)(n.code,{children:"<SENDER_ADDRESS>"})," with the Ethereum address to track:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'        if (transaction.from == "<SENDER_ADDRESS>") {\n          console.log("Specified address sent an ERC-20 token!");\n        }\n'})}),"\n",(0,a.jsxs)(n.p,{children:["You can also track a specific recipient address receiving any tokens by tracking the ",(0,a.jsx)(n.code,{children:"transaction.to"})," value:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'        if (transaction.to == "<RECIEVING_ADDRESS>") {\n          console.log("Specified address received an ERC-20 token!");\n        }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"9-track-a-specific-token",children:"9. Track a specific token"}),"\n",(0,a.jsxs)(n.p,{children:["You can track a specific address sending a specific ERC-20 token, by checking for both ",(0,a.jsx)(n.code,{children:"transaction.from"})," (the token sender) and ",(0,a.jsx)(n.code,{children:"event.address"})," (the ERC-20 smart contract). Add the following line to the listener created in ",(0,a.jsx)(n.a,{href:"/test-integrate-infura/services/tutorials/ethereum/track-erc-20-token-transfers#6-read-erc-20-transfers",children:"step 6"}),", replacing ",(0,a.jsx)(n.code,{children:"<SENDER_ADDRESS>"})," with the Ethereum address to track, and ",(0,a.jsx)(n.code,{children:"<CONTRACT_ADDRESS>"})," with the smart contract address to track:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'        if (\n          transaction.from == "<SENDER_ADDRESS>" &&\n          event.address == "<CONTRACT_ADDRESS>"\n        ) {\n          console.log("Specified address transferred specified token!");\n        }\n'})}),"\n",(0,a.jsx)(n.p,{children:"You can also track any transactions for a specific ERC-20 token, regardless of the sender or recipient:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'        if (event.address == "<CONTRACT_ADDRESS>") {\n          console.log("Specified ERC-20 transfer!");\n        }\n'})}),"\n",(0,a.jsx)(n.h3,{id:"10-run-the-script",children:"10. Run the script"}),"\n",(0,a.jsx)(n.p,{children:"Run the script using the following command:"}),"\n",(0,a.jsxs)(s.A,{children:[(0,a.jsx)(c.A,{value:"Command",label:"Command",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"node trackERC20.js\n"})})}),(0,a.jsx)(c.A,{value:"Example output",label:"Example output",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"Transfer of 9417.663694821564607555        RIO        from 0x6b75d8AF000000e20B7a7DDf000Ba900b4009A80 to 0x5b7E3E37a1aa6369386e5939053779abd3597508\nTransfer of 1.554276118336708787           WETH       from 0x60594a405d53811d3BC4766596EFD80fd545A270 to 0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD\nTransfer of 2685                           DAI        from 0x008CE5dcC3d66e6FD7D657Ea81B54d1afFFAba4b to 0x60594a405d53811d3BC4766596EFD80fd545A270\nSpecified ERC-20 transfer!\nTransfer of 9964.083347473883463154        RIO        from 0x5b7E3E37a1aa6369386e5939053779abd3597508 to 0x008CE5dcC3d66e6FD7D657Ea81B54d1afFFAba4b\n"})})})]}),"\n",(0,a.jsx)(n.h3,{id:"complete-code-overview",children:"Complete code overview"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const { Web3 } = require("web3");\n\nasync function main(){\n  const web3 = new Web3("wss://mainnet.infura.io/ws/v3/<YOUR_API_KEY>");\n\n  let options = {\n    topics: [web3.utils.sha3("Transfer(address,address,uint256)")],\n  };\n\n  const abi = [\n    {\n      constant: true,\n      inputs: [],\n      name: "symbol",\n      outputs: [\n        {\n          name: "",\n          type: "string",\n        },\n      ],\n      payable: false,\n      stateMutability: "view",\n      type: "function",\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: "decimals",\n      outputs: [\n        {\n          name: "",\n          type: "uint8",\n        },\n      ],\n      payable: false,\n      stateMutability: "view",\n      type: "function",\n    },\n  ];\n\n  let subscription = await web3.eth.subscribe("logs", options);\n\n  async function collectData(contract) {\n    try {\n      var decimals = await contract.methods.decimals().call();\n    }\n    catch {\n      decimals = 18n;\n    }\n    try {\n      var symbol = await contract.methods.symbol().call();\n    }\n    catch {\n      symbol = \'???\';\n    }\n    return { decimals, symbol };\n  }\n\n  subscription.on("data", (event) => {\n    if (event.topics.length == 3) {\n      let transaction = web3.eth.abi.decodeLog(\n        [\n          {\n            type: "address",\n            name: "from",\n            indexed: true,\n          },\n          {\n            type: "address",\n            name: "to",\n            indexed: true,\n          },\n          {\n            type: "uint256",\n            name: "value",\n            indexed: false,\n          },\n        ],\n        event.data,\n        [event.topics[0], event.topics[1], event.topics[2]],\n      );\n\n      const contract = new web3.eth.Contract(abi, event.address);\n      collectData(contract).then((contractData) => {\n        var unit = Object.keys(web3.utils.ethUnitMap).find(\n          (key) => web3.utils.ethUnitMap[key] == (BigInt(10) ** contractData.decimals)\n        );\n        if (!unit) {\n          // Simplification for contracts that use "non-standard" units, e.g. REDDIT contract returns decimals==8\n          unit = "wei"\n        }\n        // This is logging each transfer event found:\n        const value = web3.utils.fromWei(transaction.value, unit);\n        console.log(\n          `Transfer of ${value+\' \'.repeat(Math.max(0,30-value.length))} ${\n            contractData.symbol+\' \'.repeat(Math.max(0,10-contractData.symbol.length))\n          } from ${transaction.from} to ${transaction.to}`,\n        );\n\n        // Below are examples of testing for transactions involving particular EOA or contract addresses\n        if (transaction.from == "0x495f947276749ce646f68ac8c248420045cb7b5e") {\n          console.log("Specified address sent an ERC-20 token!");\n        }\n        if (transaction.to == "0x495f947276749ce646f68ac8c248420045cb7b5e") {\n          console.log("Specified address received an ERC-20 token!");\n        }\n        if (\n          transaction.from == "0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D" &&\n          event.address == "0x6b175474e89094c44da98b954eedeac495271d0f"\n        ) {\n          console.log("Specified address transferred specified token!");\n        } // event.address contains the contract address\n        if (event.address == "0x6b175474e89094c44da98b954eedeac495271d0f") {\n          console.log("Specified ERC-20 transfer!");\n        }\n      });\n    }\n  });\n\n  subscription.on("error", (err) => {\n    throw err;\n  });\n  subscription.on("connected", (nr) =>\n    console.log("Subscription on ERC-20 started with ID %s", nr),\n  );\n\n}\nmain();\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},19365:(e,n,t)=>{t.d(n,{A:()=>c});t(96540);var a=t(18215);const r={tabItem:"tabItem_Ymn6"};var s=t(74848);function c(e){let{children:n,hidden:t,className:c}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,c),hidden:t,children:n})}},11470:(e,n,t)=>{t.d(n,{A:()=>k});var a=t(96540),r=t(18215),s=t(23104),c=t(56347),i=t(205),o=t(57485),l=t(31682),d=t(70679);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,l.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function f(e){let{queryString:n=!1,groupId:t}=e;const r=(0,c.W6)(),s=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,o.aZ)(s),(0,a.useCallback)((e=>{if(!s)return;const n=new URLSearchParams(r.location.search);n.set(s,e),r.replace({...r.location,search:n.toString()})}),[s,r])]}function m(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,s=h(e),[c,o]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:s}))),[l,u]=f({queryString:t,groupId:r}),[m,b]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,s]=(0,d.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&s.set(e)}),[t,s])]}({groupId:r}),v=(()=>{const e=l??m;return p({value:e,tabValues:s})?e:null})();(0,i.A)((()=>{v&&o(v)}),[v]);return{selectedValue:c,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),b(e)}),[u,b,s]),tabValues:s}}var b=t(92303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function j(e){let{className:n,block:t,selectedValue:a,selectValue:c,tabValues:i}=e;const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,s.a_)(),d=e=>{const n=e.currentTarget,t=o.indexOf(n),r=i[t].value;r!==a&&(l(n),c(r))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>o.push(e),onKeyDown:u,onClick:d,...s,className:(0,r.A)("tabs__item",v.tabItem,s?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function g(e){let{lazy:n,children:t,selectedValue:r}=e;const s=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=s.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function y(e){const n=m(e);return(0,x.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,x.jsx)(j,{...n,...e}),(0,x.jsx)(g,{...n,...e})]})}function k(e){const n=(0,b.A)();return(0,x.jsx)(y,{...e,children:u(e.children)},String(n))}},28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>i});var a=t(96540);const r={},s=a.createContext(r);function c(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);