"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[97828],{62940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=t(74848),r=t(28453);t(32545);const s={description:"IPFS quickstart guide",sidebar_position:2},o="Quickstart",c={id:"api/networks/ipfs/quickstart",title:"Quickstart",description:"IPFS quickstart guide",source:"@site/services/api/networks/ipfs/quickstart.md",sourceDirName:"api/networks/ipfs",slug:"/api/networks/ipfs/quickstart",permalink:"/test-integrate-infura/services/api/networks/ipfs/quickstart",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/api/networks/ipfs/quickstart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"IPFS quickstart guide",sidebar_position:2},sidebar:"servicesSidebar",previous:{title:"IPFS",permalink:"/test-integrate-infura/services/api/networks/ipfs/"},next:{title:"Supported networks",permalink:"/test-integrate-infura/services/api/networks/ipfs/choose-a-network"}},a={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Make calls",id:"make-calls",level:2},{value:"cURL",id:"curl",level:3},{value:"JavaScript",id:"javascript",level:3},{value:"NodeJS",id:"nodejs",level:3},{value:"Python",id:"python",level:3},{value:"<code>kubo-rpc-client</code>",id:"kubo-rpc-client",level:3},{value:"<code>go-ipfs-api</code>",id:"go-ipfs-api",level:3},{value:"<code>go-ipfs-http-client</code>",id:"go-ipfs-http-client",level:2},{value:"Next Steps",id:"next-steps",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"quickstart",children:"Quickstart"}),"\n",(0,i.jsx)(n.p,{children:"This quickstart guide will help you set up and make calls on the IPFS network using the Infura endpoints."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["To access the IPFS network through Infura, you'll need to add a billing card to your account, even if you're using a free account. Refer\nto the ",(0,i.jsx)(n.a,{href:"/test-integrate-infura/services/api/networks/ipfs/how-to/access-ipfs-content/dedicated-gateways#stats-and-billing",children:"billing details"})," for more information."]})}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(n.p,{children:["Before you begin, ensure you have a valid ",(0,i.jsx)(n.a,{href:"../../../dashboard/create-api.md",children:"API key"})," and\n",(0,i.jsx)(n.a,{href:"../../../dashboard/secure-an-api/api-key-secret.md",children:"API key secret"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"make-calls",children:"Make calls"}),"\n",(0,i.jsx)(n.h3,{id:"curl",children:"cURL"}),"\n",(0,i.jsx)(n.p,{children:"cURL generates the auth header and encodes your credentials behind the scenes."}),"\n",(0,i.jsxs)(n.p,{children:["Include the ",(0,i.jsx)(n.code,{children:"-u"})," flag with the authentication information."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'curl -X POST -F file=@myfile -u "<API_KEY>:<API_KEY_SECRET>" "https://ipfs.infura.io:5001/api/v0/add"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"javascript",children:"JavaScript"}),"\n",(0,i.jsxs)(n.p,{children:["Wrap JavaScript calls to IPFS with the Infura ",(0,i.jsx)(n.code,{children:"Authorization"})," header."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'xhr.setRequestHeader("Authorization", "Basic " + btoa(<API_KEY> + ":" + <API_KEY_SECRET>));\n'})}),"\n",(0,i.jsx)(n.h3,{id:"nodejs",children:"NodeJS"}),"\n",(0,i.jsxs)(n.p,{children:["Change the ",(0,i.jsx)(n.code,{children:"<API_KEY>"})," and ",(0,i.jsx)(n.code,{children:"<API_KEY_SECRET>"})," in the NodeJS example code below."]}),"\n",(0,i.jsxs)(n.p,{children:["Save the following script to a file, e.g. ",(0,i.jsx)(n.code,{children:"index.js"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'const https = require("https");\n\nconst projectId = "<API_KEY>";\nconst projectSecret = "<API_KEY_SECRET>";\n\nconst options = {\n  host: "ipfs.infura.io",\n  port: 5001,\n  path: "/api/v0/pin/add?arg=QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn",\n  method: "POST",\n  auth: projectId + ":" + projectSecret,\n};\n\nlet req = https.request(options, (res) => {\n  let body = "";\n  res.on("data", function (chunk) {\n    body += chunk;\n  });\n  res.on("end", function () {\n    console.log(body);\n  });\n});\nreq.end();\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In a terminal window, run the script with ",(0,i.jsx)(n.code,{children:"node index.js"})]}),"\n",(0,i.jsx)(n.p,{children:"Output something like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'{"Pins":["QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn"]}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"python",children:"Python"}),"\n",(0,i.jsxs)(n.p,{children:["Change the ",(0,i.jsx)(n.code,{children:"projectId"})," and ",(0,i.jsx)(n.code,{children:"projectSecret"})," in the Python example code below."]}),"\n",(0,i.jsxs)(n.p,{children:["Save the following script to a file, e.g. ",(0,i.jsx)(n.code,{children:"index.py"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import requests\n\nprojectId = \"<API_KEY>\"\nprojectSecret = \"<API_KEY_SECRET>\"\nendpoint = \"https://ipfs.infura.io:5001\"\n\n### CREATE AN ARRAY OF TEST FILES ###\nfiles = {\n    'file': 'myNFT.png'\n}\n\n### ADD FILE TO IPFS AND SAVE THE HASH ###\nresponse1 = requests.post(endpoint + '/api/v0/add', files=files, auth=(projectId, projectSecret))\nprint(response1)\nhash = response1.text.split(\",\")[1].split(\":\")[1].replace('\"','')\nprint(hash)\n\n### READ FILE WITH HASH ###\nparams = {\n    'arg': hash\n}\nresponse2 = requests.post(endpoint + '/api/v0/cat', params=params, auth=(projectId, projectSecret))\nprint(response2)\nprint(response2.text)\n\n### REMOVE OBJECT WITH PIN/RM ###\nresponse3 = requests.post(endpoint + '/api/v0/pin/rm', params=params, auth=(projectId, projectSecret))\nprint(response3.json())\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Run the script with ",(0,i.jsx)(n.code,{children:"python index.py"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Output something like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"<Response [200]>\nQmWtBbpKST49AQFLx8HAdwwjUu7HBP2wrtAH1x8df5qrVm\n<Response [200]>\nmyNFT.png\n{'Pins': ['QmWtBbpKST49AQFLx8HAdwwjUu7HBP2wrtAH1x8df5qrVm']}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"kubo-rpc-client",children:(0,i.jsx)(n.code,{children:"kubo-rpc-client"})}),"\n",(0,i.jsxs)(n.p,{children:["Use the official ",(0,i.jsx)(n.a,{href:"https://github.com/ipfs/js-kubo-rpc-client",children:(0,i.jsx)(n.code,{children:"kubo-rpc-client"})})," JavaScript client library."]}),"\n",(0,i.jsxs)(n.p,{children:["Install the library with ",(0,i.jsx)(n.code,{children:"npm install --save kubo-rpc-client"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Save the following script to a file, e.g. ",(0,i.jsx)(n.code,{children:"index.mjs"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import { create } from \'kubo-rpc-client\'\n\nconst projectId = "<API_KEY>";\nconst projectSecret = "<API_KEY_SECRET>";\nconst auth =\n  "Basic " + Buffer.from(projectId + ":" + projectSecret).toString("base64");\n\nconst client = create({\n  host: "ipfs.infura.io",\n  port: 5001,\n  protocol: "https",\n  headers: {\n    authorization: auth,\n  },\n});\n\nclient.pin.add("QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn").then((res) => {\n  console.log(res);\n});\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Run with ",(0,i.jsx)(n.code,{children:"node index.mjs"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Output something like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"CID(QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"go-ipfs-api",children:(0,i.jsx)(n.code,{children:"go-ipfs-api"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the official IPFS ",(0,i.jsx)(n.a,{href:"https://github.com/ipfs/go-ipfs-api",children:(0,i.jsx)(n.code,{children:"go-ipfs-api"})})," GoLang API."]}),"\n",(0,i.jsxs)(n.li,{children:["Install with ",(0,i.jsx)(n.code,{children:"go get -u github.com/ipfs/go-ipfs-api"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Create a go module with ",(0,i.jsx)(n.code,{children:"go mod init infura"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Save the following script to a file, e.g. ",(0,i.jsx)(n.code,{children:"index.go"}),", and include the Infura ",(0,i.jsx)(n.code,{children:"auth"})," header with the ",(0,i.jsx)(n.code,{children:"http.RoundTripper"})," wrapper."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"fmt"\n\t"net/http"\n\t"os"\n\t"strings"\n\n\tipfsApi "github.com/ipfs/go-ipfs-api" // v0.2.0\n)\n\nfunc main() {\n\tprojectId := "<API_KEY>"\n\tprojectSecret := "<API_KEY_SECRET>"\n\n\tshell := ipfsApi.NewShellWithClient("https://ipfs.infura.io:5001", NewClient(projectId, projectSecret))\n\tcid, err := shell.Add(strings.NewReader("Infura IPFS - Getting started demo."))\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\n\tfmt.Printf("Data successfully stored in IPFS: %v\\n", cid)\n}\n\n// NewClient creates an http.Client that automatically perform basic auth on each request.\nfunc NewClient(projectId, projectSecret string) *http.Client {\n\treturn &http.Client{\n\t\tTransport: authTransport{\n\t\t\tRoundTripper:  http.DefaultTransport,\n\t\t\tProjectId:     projectId,\n\t\t\tProjectSecret: projectSecret,\n\t\t},\n\t}\n}\n\n// authTransport decorates each request with a basic auth header.\ntype authTransport struct {\n\thttp.RoundTripper\n\tProjectId     string\n\tProjectSecret string\n}\n\nfunc (t authTransport) RoundTrip(r *http.Request) (*http.Response, error) {\n\tr.SetBasicAuth(t.ProjectId, t.ProjectSecret)\n\treturn t.RoundTripper.RoundTrip(r)\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Run with ",(0,i.jsx)(n.code,{children:"go run index.go"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Output something like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"CID(QmeGAVddnBSnKc1DLE7DLV9uuTqo5F7QbaveTjr45JUdQn)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"go-ipfs-http-client",children:(0,i.jsx)(n.code,{children:"go-ipfs-http-client"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use the official IPFS ",(0,i.jsx)(n.a,{href:"https://github.com/ipfs/go-ipfs-http-client",children:(0,i.jsx)(n.code,{children:"go-ipfs-http-client"})})," GoLang API."]}),"\n",(0,i.jsxs)(n.li,{children:["Install with ",(0,i.jsx)(n.code,{children:"go get github.com/ipfs/go-ipfs-http-client"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Create a go module with ",(0,i.jsx)(n.code,{children:"go mod init infura"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Save the following script to a file, e.g. ",(0,i.jsx)(n.code,{children:"index.go"}),", and include the Infura ",(0,i.jsx)(n.code,{children:"auth"})," header with the ",(0,i.jsx)(n.code,{children:"http.RoundTripper"})," wrapper."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n\t"context"\n\t"encoding/base64"\n\t"fmt"\n\t"net/http"\n\t"os"\n\t"strings"\n\n\tipfsFiles "github.com/ipfs/go-ipfs-files" // v0.0.8\n\tipfsApi "github.com/ipfs/go-ipfs-http-client" // v0.1.0\n)\n\nfunc main() {\n\tprojectId := "<API_KEY>"\n\tprojectSecret := "<API_KEY_SECRET>"\n\n\thttpClient := &http.Client{}\n\thttpApi, err := ipfsApi.NewURLApiWithClient("https://ipfs.infura.io:5001", httpClient)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\thttpApi.Headers.Add("Authorization", "Basic " + basicAuth(projectId, projectSecret))\n\n\tcontent := strings.NewReader("Infura IPFS - Getting started demo.")\n\tp, err := httpApi.Unixfs().Add(context.Background(), ipfsFiles.NewReaderFile(content))\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\n\tfmt.Printf("Data successfully stored in IPFS: %v\\n", p.Cid().String())\n}\n\nfunc basicAuth(projectId, projectSecret string) string {\n\tauth := projectId + ":" + projectSecret\n\treturn base64.StdEncoding.EncodeToString([]byte(auth))\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Run with ",(0,i.jsx)(n.code,{children:"go run index.go"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Example output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Data successfully stored in IPFS: QmTHr95iiwSTA2USxx4g5kKnhqsNRixqohhwxjvdXmSrWn\n"})}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Now that you have successfully made a call to the IPFS network, you can explore more functionalities and APIs provided\nby Infura. Here are some suggestions:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Explore other IPFS APIs"}),": Infura supports a wide range of APIs. You can find more information in the\n",(0,i.jsx)(n.a,{href:"./http-api-methods/",children:"JSON-RPC API method documentation"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Try out different networks"}),": Infura supports multiple networks including Arbitrum, Linea, Polygon, Optimism, and more."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Monitor your usage"}),": Keep an eye on your usage on the ",(0,i.jsx)(n.a,{href:"../../../dashboard/dashboard-stats.md",children:"Infura dashboard"})," to ensure you're not hitting your rate limits."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Remember, the Infura community is here to help. If you have any questions or run into any issues, check out the\n",(0,i.jsx)(n.a,{href:"https://community.infura.io/",children:"Infura community"})," for help and answers to common questions."]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},32545:(e,n,t)=>{t.d(n,{A:()=>c});t(96540);var i=t(28774);const r="banner_ava2",s="button_BPnc";var o=t(74848);const c=e=>{let{children:n}=e;return(0,o.jsxs)("div",{className:r,children:[n,(0,o.jsx)(i.A,{to:"https://app.infura.io/register",target:"_blank",rel:"noopener noreferrer",children:(0,o.jsxs)("div",{className:`${s} margin-top--xs`,children:["Sign up\xa0",(0,o.jsx)("svg",{width:"13.5",height:"13.5","aria-hidden":"true",viewBox:"0 0 24 24",className:"iconExternalLink_node_modules-@docusaurus-theme-classic-lib-theme-Icon-ExternalLink-styles-module",children:(0,o.jsx)("path",{fill:"currentColor",d:"M21 13v10h-21v-19h12v2h-10v15h17v-8h2zm3-12h-10.988l4.035 4-6.977 7.07 2.828 2.828 6.977-7.07 4.125 4.172v-11z"})})]})})]})}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);