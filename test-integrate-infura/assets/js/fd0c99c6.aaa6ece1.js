"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[81199],{57137:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=t(74848),s=t(28453);const r={description:"Send a transaction of the Polygon network."},o="Send a transaction with Polygon",i={id:"tutorials/layer-2-networks/send-a-transaction",title:"Send a transaction with Polygon",description:"Send a transaction of the Polygon network.",source:"@site/services/tutorials/layer-2-networks/send-a-transaction.md",sourceDirName:"tutorials/layer-2-networks",slug:"/tutorials/layer-2-networks/send-a-transaction",permalink:"/test-integrate-infura/services/tutorials/layer-2-networks/send-a-transaction",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/tutorials/layer-2-networks/send-a-transaction.md",tags:[],version:"current",frontMatter:{description:"Send a transaction of the Polygon network."},sidebar:"servicesSidebar",previous:{title:"Deploy an NFT smart contract on Palm using Hardhat",permalink:"/test-integrate-infura/services/tutorials/layer-2-networks/deploy-an-nft-smart-contract-on-palm"},next:{title:"Reference",permalink:"/test-integrate-infura/services/reference"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Steps",id:"steps",level:2},{value:"1. Add Polygon network to MetaMask",id:"1-add-polygon-network-to-metamask",level:3},{value:"2. Fund your account",id:"2-fund-your-account",level:3},{value:"3. Create a project directory",id:"3-create-a-project-directory",level:3},{value:"4. Install required packages",id:"4-install-required-packages",level:3},{value:"5. Create the <code>.env</code> file",id:"5-create-the-env-file",level:3},{value:"6. Create <code>send.js</code> file",id:"6-create-sendjs-file",level:3},{value:"7. Execute the transaction",id:"7-execute-the-transaction",level:3},{value:"8. View the transaction details",id:"8-view-the-transaction-details",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"send-a-transaction-with-polygon",children:"Send a transaction with Polygon"}),"\n",(0,a.jsxs)(n.p,{children:["As with Ethereum, ",(0,a.jsx)(n.a,{href:"https://ethereum.org/en/developers/docs/transactions/",children:"transactions"})," are state-changing actions on the Polygon PoS blockchain. Examples of transactions are:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Regular transactions from one account to another."}),"\n",(0,a.jsx)(n.li,{children:"Contract deployment transactions, or calling a function in a smart contract."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"This tutorial uses the Ethereum Web3 JavaScript library to send a transaction between two accounts on the Polygon-Mumbai testnet."}),"\n",(0,a.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["An Infura ",(0,a.jsx)(n.a,{href:"../../../../developer-tools/dashboard/get-started/create-api/",children:"API key"})]}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"Node.js installed"})}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://metamask.io",children:"MetaMask installed"})," and an account for testing purposes"]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["You can use ",(0,a.jsx)(n.a,{href:"https://metamask.io",children:"MetaMask"})," or a similar Ethereum wallet to create an account for testing purposes on the Polygon blockchain."]})}),"\n",(0,a.jsx)(n.h2,{id:"steps",children:"Steps"}),"\n",(0,a.jsx)(n.h3,{id:"1-add-polygon-network-to-metamask",children:"1. Add Polygon network to MetaMask"}),"\n",(0,a.jsxs)(n.p,{children:["Refer to the Polygon instructions to ",(0,a.jsx)(n.a,{href:"https://polygon.technology/blog/getting-started-with-metamask-on-polygon",children:"add the Polygon networks to MetaMask"}),". This tutorial uses the Polygon Mumbai network."]}),"\n",(0,a.jsx)(n.h3,{id:"2-fund-your-account",children:"2. Fund your account"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://faucet.polygon.technology",children:"Use the Polygon faucet"})," to load testnet MATIC on your account for the Mumbai network."]}),"\n",(0,a.jsx)(n.h3,{id:"3-create-a-project-directory",children:"3. Create a project directory"}),"\n",(0,a.jsx)(n.p,{children:"Create a new directory for your project. This can be done from the command line:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"mkdir sendTransaction\n"})}),"\n",(0,a.jsx)(n.p,{children:"Change into the new directory:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"cd sendTransaction\n"})}),"\n",(0,a.jsx)(n.h3,{id:"4-install-required-packages",children:"4. Install required packages"}),"\n",(0,a.jsxs)(n.p,{children:["Install the ",(0,a.jsx)(n.code,{children:"web3"})," and ",(0,a.jsx)(n.code,{children:"dotenv"})," packages in the project directory."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"dotenv"})," package allows you to use a ",(0,a.jsx)(n.code,{children:".env"})," file to securely store private environment variables on your local machine."]})}),"\n",(0,a.jsxs)(n.p,{children:["Install the ",(0,a.jsx)(n.code,{children:"web3"})," package:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm install web3\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Install the ",(0,a.jsx)(n.code,{children:"dotenv"})," package:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"npm install dotenv --save\n"})}),"\n",(0,a.jsxs)(n.h3,{id:"5-create-the-env-file",children:["5. Create the ",(0,a.jsx)(n.code,{children:".env"})," file"]}),"\n",(0,a.jsxs)(n.p,{children:["Create a ",(0,a.jsx)(n.code,{children:".env"})," file in your project directory to store the project and account details."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'POLYGON_NETWORK = "polygon-amoy"\nINFURA_API_KEY = "<API-Key>"\nSIGNER_PRIVATE_KEY = "<Private-Key>"\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Ensure you replace the following values in the ",(0,a.jsx)(n.code,{children:".env"})," file:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<API-Key>"})," with the API key from your ",(0,a.jsx)(n.a,{href:"https://infura.io/dashboard",children:"Infura dashboard"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"<Private-Key>"})," with the ",(0,a.jsx)(n.a,{href:"https://metamask.zendesk.com/hc/en-us/articles/360015289632-How-to-Export-an-Account-Private-Key",children:"private key of your account"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsx)(n.p,{children:"Never disclose your private key. Anyone with your private keys can steal any assets held in your account."})}),"\n",(0,a.jsxs)(n.h3,{id:"6-create-sendjs-file",children:["6. Create ",(0,a.jsx)(n.code,{children:"send.js"})," file"]}),"\n",(0,a.jsxs)(n.p,{children:["In this example we'll create a JavaScript file (",(0,a.jsx)(n.code,{children:"send.js"}),") in the project directory which configures and sends the transaction."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",metastring:'title="send.js"',children:'const { Web3 } = require("web3");\n\nasync function main() {\n  // Configuring the connection to the Polygon node\n  const network = process.env.POLYGON_NETWORK;\n  const web3 = new Web3(\n    new Web3.providers.HttpProvider(\n      `https://${network}.infura.io/v3/${process.env.INFURA_API_KEY}`,\n    ),\n  );\n  // Creating a signing account from a private key\n  const signer = web3.eth.accounts.privateKeyToAccount(\n    process.env.SIGNER_PRIVATE_KEY,\n  );\n  web3.eth.accounts.wallet.add(signer);\n  // Creating the transaction object\n  const tx = {\n    from: signer.address,\n    to: "0xAED01C776d98303eE080D25A21f0a42D94a86D9c",\n    value: web3.utils.toWei("0.001", "ether"),\n  };\n  // Assigning the right amount of gas\n  tx.gas = await web3.eth.estimateGas(tx);\n\n  // Sending the transaction to the network\n  const receipt = await web3.eth\n    .sendTransaction(tx)\n    .once("transactionHash", (txhash) => {\n      console.log(`Mining transaction ...`);\n      console.log(`Transaction hash: ${txhash}`);\n    });\n  // The transaction is now on chain!\n  console.log(`Mined in block ${receipt.blockNumber}`);\n}\n\nrequire("dotenv").config();\nmain();\n'})}),"\n",(0,a.jsx)(n.h3,{id:"7-execute-the-transaction",children:"7. Execute the transaction"}),"\n",(0,a.jsx)(n.p,{children:"To execute the transaction, run:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"node send.js\n"})}),"\n",(0,a.jsx)(n.p,{children:"The command line will display the block number containing the transaction details."}),"\n",(0,a.jsx)(n.h3,{id:"8-view-the-transaction-details",children:"8. View the transaction details"}),"\n",(0,a.jsxs)(n.p,{children:["Copy transaction hash and view the transaction in the ",(0,a.jsx)(n.a,{href:"https://amoy.polygonscan.com/",children:"Polygon Mumbai block explorer"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(96540);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);