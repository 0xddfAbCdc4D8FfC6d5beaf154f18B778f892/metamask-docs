"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[19518],{46302:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var i=t(74848),n=t(28453);const r={description:"Use an allowlist to restrict access to your API key."},l="Allowlists",o={id:"how-to/secure-an-api/use-an-allowlist",title:"Allowlists",description:"Use an allowlist to restrict access to your API key.",source:"@site/developer-tools/dashboard/how-to/secure-an-api/use-an-allowlist.md",sourceDirName:"how-to/secure-an-api",slug:"/how-to/secure-an-api/use-an-allowlist",permalink:"/test-integrate-infura/developer-tools/dashboard/how-to/secure-an-api/use-an-allowlist",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/developer-tools/dashboard/how-to/secure-an-api/use-an-allowlist.md",tags:[],version:"current",frontMatter:{description:"Use an allowlist to restrict access to your API key."},sidebar:"dashboardSidebar",previous:{title:"Rate limits",permalink:"/test-integrate-infura/developer-tools/dashboard/how-to/secure-an-api/set-rate-limits"},next:{title:"JWTs",permalink:"/test-integrate-infura/developer-tools/dashboard/how-to/secure-an-api/use-jwts"}},a={},d=[{value:"Allowlist behavior",id:"allowlist-behavior",level:4},{value:"Contract addresses",id:"contract-addresses",level:2},{value:"Example request",id:"example-request",level:4},{value:"User agents",id:"user-agents",level:2},{value:"Example request",id:"example-request-1",level:4},{value:"Origins",id:"origins",level:2},{value:"Example request",id:"example-request-2",level:4},{value:"API request method",id:"api-request-method",level:2},{value:"Override your allowlist settings",id:"override-your-allowlist-settings",level:2},{value:"Best practices",id:"best-practices",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"allowlists",children:"Allowlists"}),"\n",(0,i.jsxs)(s.p,{children:["Allowlists protect your API key from undesirable activity by restricting access to specific\naddresses, HTTP headers ",(0,i.jsx)(s.code,{children:"User-Agent"})," and ",(0,i.jsx)(s.code,{children:"Origin"}),", and API request methods."]}),"\n",(0,i.jsx)(s.p,{children:"For example, if your dapp operates solely on the client side, your API key could be exposed to client-side\nrisks, where malicious actors could access it through browser inspection tools or network monitoring."}),"\n",(0,i.jsx)(s.admonition,{type:"tip",children:(0,i.jsxs)(s.p,{children:["Infura supports ",(0,i.jsx)(s.a,{href:"#override-your-allowlist-settings",children:"overriding your allowlist"})," settings\nwhen you include an ",(0,i.jsx)(s.a,{href:"/test-integrate-infura/developer-tools/dashboard/how-to/secure-an-api/api-key-secret",children:"API key secret"})," in requests. This allows you to apply the principle of\nleast privilege on the client side while allowing unrestricted access on the server side."]})}),"\n",(0,i.jsxs)(s.p,{children:["Add the restriction details in the ",(0,i.jsx)(s.strong,{children:"ALLOWLISTS"})," section of your API key's ",(0,i.jsx)(s.strong,{children:"Settings"})," tab."]}),"\n",(0,i.jsx)("div",{class:"left-align-container",children:(0,i.jsx)("div",{class:"img-medium",children:(0,i.jsx)("img",{src:t(95830).A})})}),"\n",(0,i.jsx)(s.h4,{id:"allowlist-behavior",children:"Allowlist behavior"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"If an API key has no allowlists, all requests are accepted."}),"\n",(0,i.jsx)(s.li,{children:"As soon as an API key has an allowlist definition, all requests must pass it."}),"\n",(0,i.jsx)(s.li,{children:"Each API key has a maximum of 30 allowlist entries per type."}),"\n",(0,i.jsx)(s.li,{children:'Each allowlist type is "AND"ed together.'}),"\n",(0,i.jsx)(s.li,{children:'Multiple entries of the same type are "OR"ed.'}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"contract-addresses",children:"Contract addresses"}),"\n",(0,i.jsxs)(s.p,{children:["If your application only queries data from specific Ethereum smart contracts or addresses, add those addresses to the ",(0,i.jsx)(s.strong,{children:"CONTRACT ADDRESSES"})," allowlist."]}),"\n",(0,i.jsx)(s.p,{children:"Any requests which query addresses that are not in the allowlist are rejected."}),"\n",(0,i.jsx)(s.p,{children:"The following RPC methods take an Ethereum address parameter and are compatible with this type of allowlisting."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_call"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_estimateGas"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_getLogs"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_getBalance"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_getCode"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_getStorageAt"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"eth_getTransactionCount"})}),"\n"]}),"\n",(0,i.jsx)(s.h4,{id:"example-request",children:"Example request"}),"\n",(0,i.jsxs)(s.p,{children:["To allow a specific Ethereum address, click ",(0,i.jsx)(s.strong,{children:"ADD"})," and input it into the ",(0,i.jsx)(s.strong,{children:"CONTRACT ADDRESSES"})," allowlist."]}),"\n",(0,i.jsx)("div",{class:"left-align-container",children:(0,i.jsx)("div",{class:"img-medium",children:(0,i.jsx)("img",{src:t(5169).A})})}),"\n",(0,i.jsx)(s.p,{children:"Test with a method from the list."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'curl https://mainnet.infura.io/v3/<PROJECT_ID> \\\n    -H \'Content-Type: application/json\' \\\n    -X POST \\\n    -d \'{"id":1, "jsonrpc": "2.0", "method": "eth_getBalance","params":["0xfe05a3e72235c9f92fd9f2282f41a8154d6d342b", "latest"]}\'\n'})}),"\n",(0,i.jsx)(s.p,{children:"Result:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'{"jsonrpc":"2.0","id":1,"result":"0x0"}\n'})}),"\n",(0,i.jsx)(s.h2,{id:"user-agents",children:"User agents"}),"\n",(0,i.jsxs)(s.p,{children:["To limit access to your application to specific user agents, add them to the ",(0,i.jsx)(s.strong,{children:"USER AGENTS"})," allowlist."]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["Find out more about the HTTP Header ",(0,i.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",children:"User-Agent"}),"."]})}),"\n",(0,i.jsx)(s.p,{children:"When you add a User-Agent to an allowlist, any API requests originating from other platforms are rejected."}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"USER AGENTS"})," allowlist uses partial string matching. If the allowlisted string is present in the\nrequest's full User-Agent, it is registered as a match."]})}),"\n",(0,i.jsx)(s.h4,{id:"example-request-1",children:"Example request"}),"\n",(0,i.jsxs)(s.p,{children:["For example, to allow requests from Android phones alone, select ",(0,i.jsx)(s.strong,{children:"ADD"})," and input ",(0,i.jsx)(s.code,{children:"Android"})," into\nthe ",(0,i.jsx)(s.strong,{children:"USER AGENTS"})," allowlist."]}),"\n",(0,i.jsx)("div",{class:"left-align-container",children:(0,i.jsx)("div",{class:"img-medium",children:(0,i.jsx)("img",{src:t(88681).A})})}),"\n",(0,i.jsx)(s.p,{children:"Test with a simple call from a desktop terminal."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'curl https://mainnet.infura.io/v3/<PROJECT_ID> \\\n    -X POST \\\n    -H "Content-Type: application/json" \\\n    -d \'{"jsonrpc":"2.0","method":"eth_accounts","params":[],"id":1}\'\n'})}),"\n",(0,i.jsx)(s.p,{children:"Result:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-bash",children:'{"jsonrpc":"2.0","error":{"code":-32002,"message":"rejected due to project ID settings"}}ash\n'})}),"\n",(0,i.jsx)(s.h2,{id:"origins",children:"Origins"}),"\n",(0,i.jsxs)(s.p,{children:["To limit access to your application to specific URLs, add them to the ",(0,i.jsx)(s.strong,{children:"ORIGINS"})," allowlist."]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["Find out more about the HTTP Header ",(0,i.jsx)(s.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin",children:"Origin"}),"."]})}),"\n",(0,i.jsx)(s.p,{children:"When you add an origin to an allowlist, any API requests originating from other origins are rejected."}),"\n",(0,i.jsx)(s.p,{children:"Origin allowlists support wildcard subdomain patterns."}),"\n",(0,i.jsxs)(s.p,{children:["For example, allowlist entry ",(0,i.jsx)(s.code,{children:"https://*.example.com"})," matches ",(0,i.jsx)(s.code,{children:"https://your-app.example.com"})," ,\n",(0,i.jsx)(s.code,{children:"https://our-app.example.com"}),", and ",(0,i.jsx)(s.code,{children:"https://their-app.example.com"}),", etc."]}),"\n",(0,i.jsx)(s.p,{children:"The origin scheme (HTTPS in the example above) is optional. However, if you include it, it must match."}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["An entry with ",(0,i.jsx)(s.em,{children:"only"})," a scheme allows requests coming from that scheme alone."]})}),"\n",(0,i.jsx)(s.h4,{id:"example-request-2",children:"Example request"}),"\n",(0,i.jsxs)(s.p,{children:["To limit requests to your hosted web3 application, click ",(0,i.jsx)(s.strong,{children:"ADD"})," and input ",(0,i.jsx)(s.code,{children:"mydapp.example.com"})," into the ",(0,i.jsx)(s.strong,{children:"ORIGINS"})," allowlist."]}),"\n",(0,i.jsxs)(s.p,{children:["Any requests that do not include ",(0,i.jsx)(s.code,{children:"Origin: mydapp.example.com"})," are rejected."]}),"\n",(0,i.jsx)(s.h2,{id:"api-request-method",children:"API request method"}),"\n",(0,i.jsxs)(s.p,{children:["To limit the methods allowed, add them to the ",(0,i.jsx)(s.strong,{children:"API REQUEST METHOD"})," allowlist."]}),"\n",(0,i.jsx)(s.p,{children:"If the list is not empty, any method calls not specified in the list are rejected."}),"\n",(0,i.jsx)(s.p,{children:"Use the dropdown list to select a method."}),"\n",(0,i.jsx)("div",{class:"left-align-container",children:(0,i.jsx)("div",{class:"img-medium",children:(0,i.jsx)("img",{src:t(66511).A})})}),"\n",(0,i.jsx)(s.h2,{id:"override-your-allowlist-settings",children:"Override your allowlist settings"}),"\n",(0,i.jsx)(s.admonition,{title:"For customers on the Developer tier or higher only",type:"note",children:(0,i.jsxs)(s.p,{children:["This functionality is only available to customers on the Developer tier or higher. You'll need to\n",(0,i.jsx)(s.a,{href:"/test-integrate-infura/developer-tools/dashboard/how-to/upgrade-your-plan",children:"upgrade your plan"})," if you're currently on the free Core tier."]})}),"\n",(0,i.jsxs)(s.p,{children:["The ",(0,i.jsx)(s.strong,{children:"OVERIDE ALLOWLIST"})," switch lets you overide your allowlist settings when a request includes an\n",(0,i.jsx)(s.a,{href:"/test-integrate-infura/developer-tools/dashboard/how-to/secure-an-api/api-key-secret",children:"API key secret"}),". This means requests will be accepted even if an IP address or\nURL isn't on your allowlist, provided they include both the API key and the API key secret."]}),"\n",(0,i.jsx)("div",{class:"left-align-container",children:(0,i.jsx)("div",{class:"img-medium",children:(0,i.jsx)("img",{src:t(18633).A})})}),"\n",(0,i.jsx)(s.p,{children:"This feature provides the following benefits:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Principle of least privilege on the client side"})," - On the client side of your dapp, you may wish\nto limit the actions possible with your API key to only those necessary for the application's\nfunctionality. Allowlists ensure the API key is used solely for authorized locations, smart contract\naddresses, or methods."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"No restrictions server side"})," - On the server side, where the API key secret can be stored\nsecurely, you might need to carry out a broader range of actions without the constraints of\nallowlists. Using the API key secret allows you to circumvent these restrictions, giving your\nserver-side application unrestricted use of the API key."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"best-practices",children:"Best practices"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Ensure the ",(0,i.jsx)(s.code,{children:"API-KEY-SECRET"})," is not exposed publicly, and include it in your requests."]}),"\n",(0,i.jsx)(s.li,{children:"Use all allowlist options wherever possible."}),"\n",(0,i.jsx)(s.li,{children:"Create a new API key for each application. This allows you to allowlist the contract addresses relevant to that application."}),"\n",(0,i.jsxs)(s.li,{children:["Avoid committing your project keys to a repo by using a package like ",(0,i.jsx)(s.a,{href:"https://www.npmjs.com/package/dotenv",children:"dotenv"}),"."]}),"\n"]}),"\n",(0,i.jsx)(s.admonition,{type:"info",children:(0,i.jsxs)(s.p,{children:["If your dapp runs on the client side only, your API key will be exposed within client-side code. Consider\n",(0,i.jsx)(s.a,{href:"https://thegraph.com/docs/en/cookbook/how-to-secure-api-keys-using-nextjs-server-components/",children:"creating a server component to secure your keys"}),"."]})})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5169:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/address-allowlist-5d28839c7e836c7627ce06bf5cd313bb.png"},18633:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/allowlist-toggle-af0e41486a1628458624e95553fa042c.png"},95830:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/allowlist-2a034e09bcb44be8922852f715d55934.png"},66511:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/api-request-method-ea6ca4405b613d0a40aee5dba3296083.png"},88681:(e,s,t)=>{t.d(s,{A:()=>i});const i=t.p+"assets/images/user-agents-fef67f9c5a6bf69da0726b8a9b29cd4f.png"},28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>o});var i=t(96540);const n={},r=i.createContext(n);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);