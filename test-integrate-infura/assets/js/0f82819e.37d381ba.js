"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[97904],{76608:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=n(74848),o=n(28453);const r={},i="JSON-RPC methods",c={id:"api/networks/celo/json-rpc-methods/index",title:"JSON-RPC methods",description:"Celo supports a subset Ethereum JSON-RPC methods. WebSocket calls are not supported when using the Celo endpoints.",source:"@site/services/api/networks/celo/json-rpc-methods/index.md",sourceDirName:"api/networks/celo/json-rpc-methods",slug:"/api/networks/celo/json-rpc-methods/",permalink:"/test-integrate-infura/services/api/networks/celo/json-rpc-methods/",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/api/networks/celo/json-rpc-methods/index.md",tags:[],version:"current",frontMatter:{},sidebar:"servicesSidebar",previous:{title:"Get Celo tokens",permalink:"/test-integrate-infura/services/api/networks/celo/how-to/get-celo-tokens"},next:{title:"eth_accounts",permalink:"/test-integrate-infura/services/api/networks/celo/json-rpc-methods/eth_accounts"}},l={},d=[];function h(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"json-rpc-methods",children:"JSON-RPC methods"}),"\n",(0,s.jsxs)(t.p,{children:["Celo supports a subset ",(0,s.jsx)(t.a,{href:"/test-integrate-infura/services/api/networks/ethereum/json-rpc-methods/",children:"Ethereum JSON-RPC methods"}),". WebSocket calls are not supported when using the Celo endpoints."]}),"\n",(0,s.jsx)(t.p,{children:"The following methods are not supported with Celo:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_feeHistory"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_getUncleCountByBlockHash"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_getUncleCountByBlockNumber"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_getUncleByBlockHashAndIndex"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_getUncleByBlockNumberAndIndex"})}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"The following methods are supported by Celo, but not supported by Infura using a Celo endpoint:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_getFilterChanges"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_getFilterLogs"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_newFilter"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_newBlockFilter"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"eth_uninstallFilter"})}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Infura is also compatible with the ",(0,s.jsx)(t.a,{href:"https://docs.celo.org/developer/contractkit",children:"Celo ContractKit"}),", a library of tools\ndesigned to integrate applications with Celo."]})]})}function a(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);