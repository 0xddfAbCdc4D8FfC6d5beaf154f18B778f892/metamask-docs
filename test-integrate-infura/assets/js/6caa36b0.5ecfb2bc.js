"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[79369],{68333:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var n=r(74848),s=r(28453);const o={title:"JSON-RPC APIs",description:"Supported standard Ethereum methods on Arbitrum network."},i="JSON-RPC APIs",a={id:"api/networks/arbitrum/json-rpc-methods/index",title:"JSON-RPC APIs",description:"Supported standard Ethereum methods on Arbitrum network.",source:"@site/services/api/networks/arbitrum/json-rpc-methods/index.md",sourceDirName:"api/networks/arbitrum/json-rpc-methods",slug:"/api/networks/arbitrum/json-rpc-methods/",permalink:"/test-integrate-infura/services/api/networks/arbitrum/json-rpc-methods/",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/api/networks/arbitrum/json-rpc-methods/index.md",tags:[],version:"current",frontMatter:{title:"JSON-RPC APIs",description:"Supported standard Ethereum methods on Arbitrum network."},sidebar:"servicesSidebar",previous:{title:"Get testnet ETH",permalink:"/test-integrate-infura/services/api/networks/arbitrum/how-to/get-testnet-eth"},next:{title:"eth_accounts",permalink:"/test-integrate-infura/services/api/networks/arbitrum/json-rpc-methods/eth_accounts"}},c={},d=[];function u(e){const t={a:"a",h1:"h1",p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"json-rpc-apis",children:"JSON-RPC APIs"}),"\n",(0,n.jsx)(t.p,{children:"The standard Ethereum methods documented in this section are supported by Infura on the Arbitrum network."}),"\n",(0,n.jsx)(t.p,{children:"The Arbitrum API aims to be a superset of the Ethereum JSON-RPC specification and supports all the standard Ethereum JSON-RPC-APIs."}),"\n",(0,n.jsxs)(t.p,{children:["When interacting with the API, you can expect all the usual Ethereum JSON-RPC specification fields, ",(0,n.jsx)(t.a,{href:"https://developer.offchainlabs.com/docs/differences_overview#json-rpc-api",children:"and some extra ones"})," used to display information unique to Arbitrum."]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>a});var n=r(96540);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);