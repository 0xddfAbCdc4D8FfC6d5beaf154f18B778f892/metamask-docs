"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[62850],{69942:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>f,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var r=n(74848),s=n(28453),a=n(47220);const i={description:"Gas API documentation"},c="Gas",o={id:"reference/gas-api/index",title:"Gas",description:"Gas API documentation",source:"@site/services/reference/gas-api/index.md",sourceDirName:"reference/gas-api",slug:"/reference/gas-api/",permalink:"/test-integrate-infura/services/reference/gas-api/",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/reference/gas-api/index.md",tags:[],version:"current",frontMatter:{description:"Gas API documentation"},sidebar:"servicesSidebar",previous:{title:"web3_clientVersion",permalink:"/test-integrate-infura/services/reference/ethereum/json-rpc-methods/web3_clientversion"},next:{title:"Quickstart",permalink:"/test-integrate-infura/services/reference/gas-api/quickstart"}},l={},d=[];function u(e){const t={h1:"h1",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"gas",children:"Gas"}),"\n",(0,r.jsx)(a.A,{items:[{href:"quickstart",title:"Quickstart",description:"Learn how to quickly connect and make calls to the Gas API."},{href:"json-rpc-methods",title:"JSON-RPC APIs",description:"View the APIs available for communicating with the Gas API."},{href:"../../../developer-tools/dashboard/get-started/create-api/",title:"Create an API key",description:"Learn how to create an API key and secure and share it with your team."}]})]})}function f(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},47220:(e,t,n)=>{n.d(t,{A:()=>o});n(96540);var r=n(20053),s=n(28774),a=n(49259),i=n(74848);function c(e){let{item:t}=e;const n=(0,i.jsxs)(i.Fragment,{children:[t.title&&(0,i.jsxs)("h2",{className:(0,r.A)(a.A.cardTitle),children:[t.icon&&(0,i.jsx)("img",{src:t.icon,className:a.A.cardIcon}),(0,i.jsx)("span",{children:t.title})]}),t.description&&(0,i.jsx)("p",{children:t.description})]}),c=(0,r.A)("card","padding--lg",a.A.cardContainer,{[a.A.flaskOnly]:t.flaskOnly});return t.href?(0,i.jsx)(s.A,{className:c,href:t.href,children:n}):(0,i.jsx)("div",{className:c,children:n})}function o(e){const{items:t}=e;return(0,i.jsx)("section",{className:"row",children:t.map(((e,t)=>(0,i.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,i.jsx)(c,{item:e})},t)))})}},20053:(e,t,n)=>{function r(e){var t,n,s="";if("string"==typeof e||"number"==typeof e)s+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(s&&(s+=" "),s+=n);else for(t in e)e[t]&&(s&&(s+=" "),s+=t);return s}n.d(t,{A:()=>s});const s=function(){for(var e,t,n=0,s="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(s&&(s+=" "),s+=t);return s}},49259:(e,t,n)=>{n.d(t,{A:()=>r});const r={cardContainer:"cardContainer_C0Dw",flaskOnly:"flaskOnly_ADUl",cardTitle:"cardTitle_ZNcV",cardIcon:"cardIcon_naep"}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(96540);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);