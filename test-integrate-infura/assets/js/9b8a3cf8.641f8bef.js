"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[64695],{58492:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var a=n(74848),s=n(28453);const i={description:"Conceptual information about Gas."},r="Gas",o={id:"api/learn/gas",title:"Gas",description:"Conceptual information about Gas.",source:"@site/services/api/learn/gas.md",sourceDirName:"api/learn",slug:"/api/learn/gas",permalink:"/test-integrate-infura/services/api/learn/gas",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/api/learn/gas.md",tags:[],version:"current",frontMatter:{description:"Conceptual information about Gas."},sidebar:"servicesSidebar",previous:{title:"curl",permalink:"/test-integrate-infura/services/api/learn/curl"},next:{title:"Web3 libraries",permalink:"/test-integrate-infura/services/api/learn/web3-libraries"}},c={},l=[{value:"EIP-1559 gas prices",id:"eip-1559-gas-prices",level:2},{value:"Gas API",id:"gas-api",level:2}];function h(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"gas",children:"Gas"}),"\n",(0,a.jsx)(t.p,{children:"Gas is a unit used to measure the computational effort required to perform an action on a blockchain network, such as\nexecuting a smart contract or sending a transaction. To perform an action, users must pay in units of gas, which is\ncalculated based on the computational resources required for the action, and to compensate the miners who execute the\nrequest."}),"\n",(0,a.jsx)(t.p,{children:"The amount paid is the units of gas consumed multiplied by the gas price. So for a network such as Ethereum, this is the\namount of Ether a user is willing to pay for each unit of gas. The gas price is set by the user and is a key factor in\ndetermining the priority of their transaction relative to other transactions on the network."}),"\n",(0,a.jsx)(t.p,{children:"Users can also set a gas limit, which is the maximum amount of gas that the user is willing to spend on a transaction or\nsmart contract. It acts as a safety mechanism to prevent users from accidentally overspending on a single transaction."}),"\n",(0,a.jsx)(t.h2,{id:"eip-1559-gas-prices",children:"EIP-1559 gas prices"}),"\n",(0,a.jsxs)(t.p,{children:["The Ethereum London hard fork update changed the blockchain\u2019s transaction fee model by implementing\n",(0,a.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-1559",children:"EIP-1559"}),". This update changed the way users pay gas fees on the Ethereum\nnetwork and other EVM chains."]}),"\n",(0,a.jsx)(t.p,{children:"Before EIP-1559, users specified a gas price, which was the amount they were willing to pay for a transaction to be mined. The\nauction-style system meant gas prices often fluctuated wildly. After EIP-1559, this has been replaced by two new values:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"Base fee: The minimum transaction fee for every transaction to be included in a block. This is calculated by the network\nand is affected by the number of transactions included in the previous block. The base fee gets burned, meaning\nEthereum is deflationary."}),"\n",(0,a.jsx)(t.li,{children:"Max priority fee: The optional transaction fee to prioritize your transactions over others. This is the tip that goes\nto miners."}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"gas-api",children:"Gas API"}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.a,{href:"../infura-expansion-apis/gas-api/",children:"Gas API"})," allows you to get current and historical gas price information.\nThe APIs provide recommended gas prices to get your transactions included in a block, based on your priority requirements."]}),"\n",(0,a.jsx)(t.p,{children:"This allows you to optimize your transactions for speed and cost-effectiveness. By using the Gas API, developers\ncan get real-time insights into the gas market and make informed decisions about how much to pay for transaction fees."})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var a=n(96540);const s={},i=a.createContext(s);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);