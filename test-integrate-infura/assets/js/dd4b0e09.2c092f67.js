"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[59325],{53157:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var s=r(74848),n=r(28453);const o={description:"How to make multiple API requests at the same time."},a="Make batch requests",i={id:"network-apis/ethereum/how-to/make-batch-requests",title:"Make batch requests",description:"How to make multiple API requests at the same time.",source:"@site/services/network-apis/ethereum/how-to/make-batch-requests.md",sourceDirName:"network-apis/ethereum/how-to",slug:"/network-apis/ethereum/how-to/make-batch-requests",permalink:"/test-integrate-infura/services/network-apis/ethereum/how-to/make-batch-requests",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/services/network-apis/ethereum/how-to/make-batch-requests.md",tags:[],version:"current",frontMatter:{description:"How to make multiple API requests at the same time."},sidebar:"servicesSidebar",previous:{title:"Interact with ERC-20 tokens",permalink:"/test-integrate-infura/services/network-apis/ethereum/how-to/interact-with-erc-20-tokens"},next:{title:"Subscribe to events",permalink:"/test-integrate-infura/services/network-apis/ethereum/how-to/subscribe-to-events"}},c={},m=[];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"make-batch-requests",children:"Make batch requests"}),"\n",(0,s.jsxs)(t.p,{children:["Multiple requests can be sent at the same time in an array. This is called a ",(0,s.jsx)(t.a,{href:"https://www.jsonrpc.org/specification#batch",children:"batch"}),"\nrequest, and conforms to the ",(0,s.jsx)(t.a,{href:"https://www.jsonrpc.org/specification",children:"JSON-RPC 2.0 specification"}),'. Batch is also commonly\neferred to as "multi-call."']}),"\n",(0,s.jsxs)(t.admonition,{type:"info",children:[(0,s.jsx)(t.p,{children:"All requests within the array are counted as individual requests against the daily request limit and batch itself is counted as a request."}),(0,s.jsx)(t.p,{children:"For example, if the array of request contains 30 requests, then those 30 requests count against the daily request limit, as well as the batch of requests, so this would be 31 total requests."})]}),"\n",(0,s.jsx)(t.p,{children:"Each request contained within the array is processed before all the requests are returned. Therefore, when requests are sent in a batch, they will be returned only after every request is processed."}),"\n",(0,s.jsx)(t.p,{children:"Example batch request (containing 30 requests plus the batch request itself):"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'curl --request POST \\\n  --url https://mainnet.infura.io/v3/<API-KEY> \\\n  --header \'Content-Type: application/json\' \\\n  --data \'[\n\t{"jsonrpc": "2.0", "id": 1, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 2, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 3, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 4, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 5, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 6, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 7, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 8, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 9, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 10, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 11, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 12, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 13, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 14, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 15, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 16, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 17, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 18, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 19, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 20, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 21, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 22, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 23, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 24, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 25, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 26, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 27, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 28, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 29, "method": "eth_blockNumber", "params": []},\n\t{"jsonrpc": "2.0", "id": 30, "method": "eth_accounts", "params": []}\n]\'\n\n'})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var s=r(96540);const n={},o=s.createContext(n);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);