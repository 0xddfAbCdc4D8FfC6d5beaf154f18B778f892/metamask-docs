"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[736],{81303:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var a=n(74848),r=n(28453);const o={description:"Prompt a user to add or switch to an Ethereum network.",sidebar_position:2},s="Add a network",d={id:"how-to/manage-networks/add-network",title:"Add a network",description:"Prompt a user to add or switch to an Ethereum network.",source:"@site/wallet/how-to/manage-networks/add-network.md",sourceDirName:"how-to/manage-networks",slug:"/how-to/manage-networks/add-network",permalink:"/add-note-hardhat/wallet/how-to/manage-networks/add-network",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/how-to/manage-networks/add-network.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Prompt a user to add or switch to an Ethereum network.",sidebar_position:2},sidebar:"walletSidebar",previous:{title:"Detect a user's network",permalink:"/add-note-hardhat/wallet/how-to/manage-networks/detect-network"},next:{title:"Send transactions",permalink:"/add-note-hardhat/wallet/how-to/send-transactions"}},i={},c=[{value:"Example",id:"example",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"add-a-network",children:"Add a network"}),"\n",(0,a.jsxs)(t.p,{children:["In some cases, such as when ",(0,a.jsx)(t.a,{href:"/add-note-hardhat/wallet/concepts/smart-contracts",children:"interacting with smart contracts"}),",\nyour dapp must connect a user to a new network in MetaMask.\nInstead of the user ",(0,a.jsx)(t.a,{href:"https://support.metamask.io/hc/en-us/articles/360043227612-How-to-add-a-custom-network-RPC#h_01G63GGJ83DGDRCS2ZWXM37CV5",children:"adding a new network manually"}),",\nwhich requires them to configure RPC URLs and chain IDs, your dapp can use the\n",(0,a.jsx)(t.a,{href:"/wallet/reference/wallet_addethereumchain",children:(0,a.jsx)(t.code,{children:"wallet_addEthereumChain"})})," and\n",(0,a.jsx)(t.a,{href:"/wallet/reference/wallet_switchethereumchain",children:(0,a.jsx)(t.code,{children:"wallet_switchEthereumChain"})})," RPC methods to prompt\nthe user to add a specific, pre-configured network to their MetaMask wallet."]}),"\n",(0,a.jsxs)(t.p,{children:["These methods are specified by ",(0,a.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-3085",children:"EIP-3085"})," and\n",(0,a.jsx)(t.a,{href:"https://eips.ethereum.org/EIPS/eip-3326",children:"EIP-3326"}),", and we recommend using them together."]}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"wallet_addEthereumChain"})," creates a confirmation asking the user to add the specified network to MetaMask."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"wallet_switchEthereumChain"})," creates a confirmation asking the user to switch to the specified network."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"The confirmations look like the following:"}),"\n",(0,a.jsxs)("div",{class:"row",children:[(0,a.jsx)("div",{class:"column",children:(0,a.jsx)("img",{src:n(66365).A,alt:"Add network confirmation",style:{border:"1px solid #DCDCDC"}})}),(0,a.jsx)("div",{class:"column",children:(0,a.jsx)("img",{src:n(19404).A,alt:"Switch network confirmation",style:{border:"1px solid #DCDCDC"}})})]}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["To add a local development network like Hardhat to MetaMask, see the ",(0,a.jsx)(t.a,{href:"../how-to/run-devnet.md",children:"connect a development network"})," documentation."]})}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsxs)(t.p,{children:["The following is an example of using ",(0,a.jsx)(t.code,{children:"wallet_addEthereumChain"})," and ",(0,a.jsx)(t.code,{children:"wallet_switchEthereumChain"})," to\nprompt a user to add and switch to a new network:"]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-javascript",children:'try {\n  await provider // Or window.ethereum if you don\'t support EIP-6963.\n    .request({\n      method: "wallet_switchEthereumChain",\n      params: [{ chainId: "0xf00" }],\n    });\n} catch (switchError) {\n  // This error code indicates that the chain has not been added to MetaMask.\n  if (switchError.code === 4902) {\n    try {\n      await provider // Or window.ethereum if you don\'t support EIP-6963.\n        .request({\n          method: "wallet_addEthereumChain",\n          params: [\n            {\n              chainId: "0xf00",\n              chainName: "...",\n              rpcUrls: ["https://..."] /* ... */,\n            },\n          ],\n        });\n    } catch (addError) {\n      // Handle "add" error.\n    }\n  }\n  // Handle other "switch" errors.\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},66365:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/add-network-b50a7e5fc0b9fd187d45f0070c071aa8.png"},19404:(e,t,n)=>{n.d(t,{A:()=>a});const a=n.p+"assets/images/switch-network-fa13b71d966a9c048bc069d39047a5b9.png"},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var a=n(96540);const r={},o=a.createContext(r);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);