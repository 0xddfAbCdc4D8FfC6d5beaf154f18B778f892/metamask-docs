"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[2923],{15680:(e,a,n)=>{n.d(a,{xA:()=>d,yg:()=>u});var t=n(96540);function i(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){i(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,t,i=function(e,a){if(null==e)return{};var n,t,i={},s=Object.keys(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||(i[n]=e[n]);return i}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)n=s[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=t.createContext({}),l=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},d=function(e){var a=l(e.components);return t.createElement(p.Provider,{value:a},e.children)},c="mdxType",g={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},m=t.forwardRef((function(e,a){var n=e.components,i=e.mdxType,s=e.originalType,p=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=l(n),m=i,u=c["".concat(p,".").concat(m)]||c[m]||g[m]||s;return n?t.createElement(u,o(o({ref:a},d),{},{components:n})):t.createElement(u,o({ref:a},d))}));function u(e,a){var n=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var s=n.length,o=new Array(s);o[0]=m;var r={};for(var p in a)hasOwnProperty.call(a,p)&&(r[p]=a[p]);r.originalType=e,r[c]="string"==typeof e?e:i,o[1]=r;for(var l=2;l<s;l++)o[l]=n[l];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},26866:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>g,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var t=n(58168),i=(n(96540),n(15680));const s={description:"Display custom alert, confirmation, or prompt screens in MetaMask.",sidebar_position:2},o="Dialogs",r={unversionedId:"features/custom-ui/dialogs",id:"features/custom-ui/dialogs",title:"Dialogs",description:"Display custom alert, confirmation, or prompt screens in MetaMask.",source:"@site/snaps/features/custom-ui/dialogs.md",sourceDirName:"features/custom-ui",slug:"/features/custom-ui/dialogs",permalink:"/1313-eth-sign-discontinuation/snaps/features/custom-ui/dialogs",draft:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/snaps/features/custom-ui/dialogs.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{description:"Display custom alert, confirmation, or prompt screens in MetaMask.",sidebar_position:2},sidebar:"snapsSidebar",previous:{title:"Interactive UI",permalink:"/1313-eth-sign-discontinuation/snaps/features/custom-ui/interactive-ui"},next:{title:"Home pages",permalink:"/1313-eth-sign-discontinuation/snaps/features/custom-ui/home-pages"}},p={},l=[{value:"Request permission to display dialogs",id:"request-permission-to-display-dialogs",level:2},{value:"Display an alert dialog",id:"display-an-alert-dialog",level:2},{value:"Display a confirmation dialog",id:"display-a-confirmation-dialog",level:2},{value:"Display a prompt dialog",id:"display-a-prompt-dialog",level:2},{value:"Example",id:"example",level:2}],d={toc:l},c="wrapper";function g(e){let{components:a,...s}=e;return(0,i.yg)(c,(0,t.A)({},d,s,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"dialogs"},"Dialogs"),(0,i.yg)("p",null,"You can display a dialog in the MetaMask UI using the\n",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/reference/snaps-api#snap_dialog"},(0,i.yg)("inlineCode",{parentName:"a"},"snap_dialog"))," API method.\nDialogs can contain ",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/features/custom-ui/"},"custom UI")," and ",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/features/custom-ui/interactive-ui"},"interactive UI")," components."),(0,i.yg)("p",null,"There are three types of dialogs: ",(0,i.yg)("a",{parentName:"p",href:"#display-an-alert-dialog"},"alerts"),",\n",(0,i.yg)("a",{parentName:"p",href:"#display-a-confirmation-dialog"},"confirmations"),", and ",(0,i.yg)("a",{parentName:"p",href:"#display-a-prompt-dialog"},"prompts"),"."),(0,i.yg)("admonition",{type:"caution"},(0,i.yg)("p",{parentName:"admonition"},"Dialogs do not work when MetaMask is locked.\nTo check if MetaMask is locked, use\n",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/reference/snaps-api#snap_getclientstatus"},(0,i.yg)("inlineCode",{parentName:"a"},"snap_getClientStatus")),".")),(0,i.yg)("h2",{id:"request-permission-to-display-dialogs"},"Request permission to display dialogs"),(0,i.yg)("p",null,"To display dialogs, first request the ",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/reference/snaps-api#snap_dialog"},(0,i.yg)("inlineCode",{parentName:"a"},"snap_dialog"))," permission.\nAdd the following to your Snap's manifest file:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-json",metastring:'title="snap.manifest.json"',title:'"snap.manifest.json"'},'"initialPermissions": {\n  "snap_dialog": {}\n}\n')),(0,i.yg)("h2",{id:"display-an-alert-dialog"},"Display an alert dialog"),(0,i.yg)("p",null,"To display an alert that can only be acknowledged, call\n",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/reference/snaps-api#snap_dialog"},(0,i.yg)("inlineCode",{parentName:"a"},"snap_dialog"))," with ",(0,i.yg)("inlineCode",{parentName:"p"},'type: "alert"'),".\nThe following example displays custom UI that alerts the user when something happens in the system:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript",metastring:'title="index.js"',title:'"index.js"'},'import { panel, text, heading } from "@metamask/snaps-sdk";\n\nawait snap.request({\n  method: "snap_dialog",\n  params: {\n    type: "alert",\n    content: panel([\n      heading("Something happened in the system"),\n      text("The thing that happened is..."),\n    ]),\n  },\n});\n\n// Code that should execute after the alert has been acknowledged.\n')),(0,i.yg)("p",{align:"center"},(0,i.yg)("img",{src:n(44214).A,alt:"Alert dialog example",width:"360px",style:{border:"1px solid #DCDCDC"}})),(0,i.yg)("h2",{id:"display-a-confirmation-dialog"},"Display a confirmation dialog"),(0,i.yg)("p",null,"To display a confirmation that can be accepted or rejected, call\n",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/reference/snaps-api#snap_dialog"},(0,i.yg)("inlineCode",{parentName:"a"},"snap_dialog"))," with ",(0,i.yg)("inlineCode",{parentName:"p"},'type: "confirmation"'),".\nThe following example displays custom UI that asks the user to confirm whether they would like to\ntake an action:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript",metastring:'title="index.js"',title:'"index.js"'},'import { panel, text, heading } from "@metamask/snaps-sdk";\n\nconst result = await snap.request({\n  method: "snap_dialog",\n  params: {\n    type: "confirmation",\n    content: panel([\n      heading("Would you like to take the action?"),\n      text("The action is..."),\n    ]),\n  },\n});\n\nif (result === true) {\n  // Do the action.\n}\n')),(0,i.yg)("p",{align:"center"},(0,i.yg)("img",{src:n(77609).A,alt:"Confirmation dialog example",width:"360px",style:{border:"1px solid #DCDCDC"}})),(0,i.yg)("h2",{id:"display-a-prompt-dialog"},"Display a prompt dialog"),(0,i.yg)("p",null,"To display a prompt where the user can enter a text response, call\n",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/reference/snaps-api#snap_dialog"},(0,i.yg)("inlineCode",{parentName:"a"},"snap_dialog"))," with ",(0,i.yg)("inlineCode",{parentName:"p"},'type: "prompt"'),".\nPrompt dialogs also accept a ",(0,i.yg)("inlineCode",{parentName:"p"},"placeholder")," value that displays in the input field when no text is entered."),(0,i.yg)("p",null,"The following example displays custom UI that prompts the user to enter a wallet address:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript",metastring:'title="index.js"',title:'"index.js"'},'import { panel, text, heading } from "@metamask/snaps-sdk";\n\nconst walletAddress = await snap.request({\n  method: "snap_dialog",\n  params: {\n    type: "prompt",\n    content: panel([\n      heading("What is the wallet address?"),\n      text("Please enter the wallet address to be monitored"),\n    ]),\n    placeholder: "0x123...",\n  },\n});\n\n// walletAddress will be a string containing the address entered by the user.\n')),(0,i.yg)("p",{align:"center"},(0,i.yg)("img",{src:n(9398).A,alt:"Prompt dialog example",width:"360px",style:{border:"1px solid #DCDCDC"}})),(0,i.yg)("h2",{id:"example"},"Example"),(0,i.yg)("p",null,"See the ",(0,i.yg)("a",{parentName:"p",href:"https://github.com/MetaMask/snaps/tree/main/packages/examples/packages/dialogs"},(0,i.yg)("inlineCode",{parentName:"a"},"@metamask/dialog-example-snap")),"\npackage for a full example of implementing dialogs.\nThis example exposes a ",(0,i.yg)("a",{parentName:"p",href:"/1313-eth-sign-discontinuation/snaps/learn/about-snaps/apis#custom-json-rpc-apis"},"custom JSON-RPC API"),"\nfor dapps to display dialogs."))}g.isMDXComponent=!0},44214:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/alert-dialog-c9346ea2c63a5fefb4be37b4101f37fd.png"},77609:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/confirmation-dialog-5dba2d923c22ac75a1a5f8f7b77da5b8.png"},9398:(e,a,n)=>{n.d(a,{A:()=>t});const t=n.p+"assets/images/prompt-dialog-b54dc7e8a8621fb1f95b51685b60f44e.png"}}]);