"use strict";(self.webpackChunkmetamask_docs=self.webpackChunkmetamask_docs||[]).push([[8317],{57096:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var a=t(74848),c=t(28453);const r={sidebar_position:1,description:"Learn about the contract interface in Unity.",tags:["Unity SDK"]},i="Contract interface",o={id:"how-to/use-sdk/gaming/unity/smart-contracts/contract-interface",title:"Contract interface",description:"Learn about the contract interface in Unity.",source:"@site/wallet/how-to/use-sdk/gaming/unity/smart-contracts/contract-interface.md",sourceDirName:"how-to/use-sdk/gaming/unity/smart-contracts",slug:"/how-to/use-sdk/gaming/unity/smart-contracts/contract-interface",permalink:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/contract-interface",draft:!1,unlisted:!1,editUrl:"https://github.com/MetaMask/metamask-docs/edit/main/wallet/how-to/use-sdk/gaming/unity/smart-contracts/contract-interface.md",tags:[{label:"Unity SDK",permalink:"/234-update-api/wallet/tags/unity-sdk"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Learn about the contract interface in Unity.",tags:["Unity SDK"]},sidebar:"walletSidebar",previous:{title:"Interact with smart contracts",permalink:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/"},next:{title:"Contract factory",permalink:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/contract-factory"}},s={},d=[{value:"Declare contract functions",id:"declare-contract-functions",level:2},{value:"Use the <code>Task</code> return type",id:"use-the-task-return-type",level:3},{value:"Define a contract constructor",id:"define-a-contract-constructor",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"contract-interface",children:"Contract interface"}),"\n",(0,a.jsxs)(n.p,{children:["When ",(0,a.jsx)(n.a,{href:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/",children:"interacting with smart contracts in Unity"}),", the ",(0,a.jsx)(n.code,{children:"IContract"})," interface defines an\ninterface of a given contract.\nThis interface includes all the functions of the contract, and an optional constructor function and\n",(0,a.jsx)(n.code,{children:"Bytecode"})," field."]}),"\n",(0,a.jsxs)(n.p,{children:["You can use the ",(0,a.jsx)(n.a,{href:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/#generate-contract-code",children:"contract code generator"})," to generate a contract\ninterface given a contract ABI or Hardhat artifact JSON file."]}),"\n",(0,a.jsxs)(n.p,{children:["To manually create a new contract interface, define a new interface that inherits from ",(0,a.jsx)(n.code,{children:"IContract"}),".\nOptionally, declare the ",(0,a.jsxs)(n.a,{href:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/contract-factory#backed-type-contract-factory",children:[(0,a.jsx)(n.code,{children:"BackedType"})," attribute"]}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  // Declare functions.\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"declare-contract-functions",children:"Declare contract functions"}),"\n",(0,a.jsxs)(n.p,{children:["To declare a ",(0,a.jsx)(n.code,{children:"view"})," or ",(0,a.jsx)(n.code,{children:"pure"})," function of the contract, first set the return type, the function name\n(may differ from the actual name), and all parameters the function takes in a Task:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:"#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  Task<BigInteger> BalanceOf(EvmAddress account);\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Once you have the function written, simply add the ",(0,a.jsx)(n.code,{children:"EvmMethodInfo"})," at the top of the function to\ndeclare the metadata about the contract function.\nThis includes the ",(0,a.jsx)(n.code,{children:"Name"})," and whether it's a ",(0,a.jsx)(n.code,{children:"View"})," function:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  [EvmMethodInfo(Name = "balanceOf", View = true)]\n  Task<BigInteger> BalanceOf(EvmAddress account);\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["To define the EVM type for a parameter, you can use the ",(0,a.jsx)(n.code,{children:"EvmParameterInfo"})," attribute.\nHowever, this usually isn't needed, because the ",(0,a.jsx)(n.code,{children:"Contract"})," class automatically infers most common\ntypes, such as ",(0,a.jsx)(n.code,{children:"EvmAddress"})," to be ",(0,a.jsx)(n.code,{children:"address"})," and ",(0,a.jsx)(n.code,{children:"string"})," to be ",(0,a.jsx)(n.code,{children:"string"}),"."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  [EvmMethodInfo(Name = "balanceOf", View = true)]\n  Task<BigInteger> BalanceOf([EvmParameterInfo(Type = "address")] string account);\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["To define the EVM return type for the function, you can use ",(0,a.jsx)(n.code,{children:"EvmParamterInfo"})," on the return type:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  [EvmMethodInfo(Name = "balanceOf", View = true)]\n  Task<BigInteger> BalanceOf(EvmAddress account);\n  \n  [EvmMethodInfo(Name = "decimals", View = true)]  \n  [return: EvmParameterInfo(Type = "uint8")]  \n  Task<BigInteger> Decimals();\n}\n'})}),"\n",(0,a.jsxs)(n.h3,{id:"use-the-task-return-type",children:["Use the ",(0,a.jsx)(n.code,{children:"Task"})," return type"]}),"\n",(0,a.jsxs)(n.p,{children:["We recommend always using ",(0,a.jsx)(n.code,{children:"Task"})," as the return type when declaring contract functions, even if\nthe given ",(0,a.jsx)(n.a,{href:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/contract-provider",children:"provider"})," does not use ",(0,a.jsx)(n.code,{children:"Task"}),".\nWhen you don't use ",(0,a.jsx)(n.code,{children:"Task"}),", the ",(0,a.jsx)(n.code,{children:"Contract"})," class is blocked until a response from the given\n",(0,a.jsx)(n.code,{children:"Provider"})," is received.\nThis means if the ",(0,a.jsx)(n.code,{children:"Provider"})," returns a Task of the request, the ",(0,a.jsx)(n.code,{children:"Contract"})," class is blocked until\nthat Task completes, which may lead to a deadlock."]}),"\n",(0,a.jsx)(n.h3,{id:"define-a-contract-constructor",children:"Define a contract constructor"}),"\n",(0,a.jsxs)(n.p,{children:["To define a constructor function, use the ",(0,a.jsx)(n.code,{children:"EvmConstructorMethod"})," attribute at the top of the\nfunction declaring the constructor.\nThe return type of the function must be the type of the interface, since a new instance of the\ninterface is returned by the ",(0,a.jsx)(n.code,{children:"Contract"})," class."]}),"\n",(0,a.jsx)(n.p,{children:"Also, do one of the following:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Declare a ",(0,a.jsx)(n.code,{children:"static readonly string Bytecode"})," in the interface that has the bytecode."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  public static readonly string Bytecode = "0x6080604052348015620000115760008....";  \n    \n  [EvmConstructorMethod]  \n  Task<ERC20> DeployNew(String name_, String symbol_);\n\n  [EvmMethodInfo(Name = "balanceOf", View = true)]\n  Task<BigInteger> BalanceOf(EvmAddress account);\n  \n  [EvmMethodInfo(Name = "decimals", View = true)]  \n  [return: EvmParameterInfo(Type = "uint8")]  \n  Task<BigInteger> Decimals();\n}\n'})}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Set the ",(0,a.jsx)(n.code,{children:"Bytecode"})," field in the ",(0,a.jsx)(n.code,{children:"EvmConstructorMethod"})," attribute."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-csharp",children:'#if UNITY_EDITOR || !ENABLE_MONO  \n[BackedType(typeof(ERC20Backing))]  \n#endif  \npublic interface ERC20 : IContract  \n{\n  [EvmConstructorMethod(Bytecode = "0x608060405238....")]  \n  Task<ERC20> DeployNew(String name_, String symbol_);\n\n  [EvmMethodInfo(Name = "balanceOf", View = true)]\n  Task<BigInteger> BalanceOf(EvmAddress account);\n  \n  [EvmMethodInfo(Name = "decimals", View = true)]  \n  [return: EvmParameterInfo(Type = "uint8")]  \n  Task<BigInteger> Decimals();\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["By default, the ",(0,a.jsx)(n.a,{href:"/234-update-api/wallet/how-to/use-sdk/gaming/unity/smart-contracts/#generate-contract-code",children:"contract code generator"})," uses the second option."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var a=t(96540);const c={},r=a.createContext(c);function i(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:i(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);